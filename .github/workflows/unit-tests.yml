name: Unit Tests

on:
  push:
    branches: [master, v1-dev]
  pull_request:
    branches: [master, v1-dev]
  workflow_dispatch:

jobs:
  bats-tests:
    name: BATS Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install bats-core
        run: |
          sudo apt-get update
          sudo apt-get install -y bats
          
      - name: Install dependencies
        run: |
          sudo apt-get install -y jq bc
          
          # Install bashly for script generation
          gem install bashly
          
      - name: Generate grpctestify script
        run: |
          make generate
          
          mkdir -p ~/bin
          cp grpctestify.sh ~/bin/grpctestify
          chmod +x ~/bin/grpctestify
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Run core unit tests
        run: |
          set -euo pipefail
          if [ -d "src/lib/core" ]; then
            find src/lib/core -name "*.bats" -print0 | xargs -0 -I {} bats {}
          fi

      - name: Run plugin unit tests
        run: |
          set -euo pipefail
          if [ -d "src/lib/plugins" ]; then
            find src/lib/plugins -name "*.bats" -print0 | xargs -0 -I {} bats {}
          fi

      - name: Run command unit tests
        run: |
          set -euo pipefail
          if [ -d "src/lib/commands" ]; then
            find src/lib/commands -name "*.bats" -print0 | xargs -0 -I {} bats {}
          fi

      - name: Calculate test coverage
        run: |
          total_files=$(find src/lib -name "*.sh" | wc -l)
          tested_files=0
          
          for sh_file in $(find src/lib -name "*.sh"); do
            bats_file="${sh_file%.sh}.bats"
            if [ -f "$bats_file" ]; then
              tested_files=$((tested_files + 1))
            fi
          done
          
          if [ $total_files -gt 0 ]; then
            coverage=$((tested_files * 100 / total_files))
          else
            coverage=0
          fi
          
          echo "Test coverage: $coverage% ($tested_files/$total_files files)"
