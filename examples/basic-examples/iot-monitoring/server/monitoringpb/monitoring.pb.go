// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: monitoring.proto

package monitoringpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceStatus int32

const (
	DeviceStatus_DEVICE_STATUS_UNKNOWN     DeviceStatus = 0
	DeviceStatus_DEVICE_STATUS_ONLINE      DeviceStatus = 1
	DeviceStatus_DEVICE_STATUS_OFFLINE     DeviceStatus = 2
	DeviceStatus_DEVICE_STATUS_MAINTENANCE DeviceStatus = 3
	DeviceStatus_DEVICE_STATUS_ERROR       DeviceStatus = 4
	DeviceStatus_DEVICE_STATUS_UPDATING    DeviceStatus = 5
)

// Enum value maps for DeviceStatus.
var (
	DeviceStatus_name = map[int32]string{
		0: "DEVICE_STATUS_UNKNOWN",
		1: "DEVICE_STATUS_ONLINE",
		2: "DEVICE_STATUS_OFFLINE",
		3: "DEVICE_STATUS_MAINTENANCE",
		4: "DEVICE_STATUS_ERROR",
		5: "DEVICE_STATUS_UPDATING",
	}
	DeviceStatus_value = map[string]int32{
		"DEVICE_STATUS_UNKNOWN":     0,
		"DEVICE_STATUS_ONLINE":      1,
		"DEVICE_STATUS_OFFLINE":     2,
		"DEVICE_STATUS_MAINTENANCE": 3,
		"DEVICE_STATUS_ERROR":       4,
		"DEVICE_STATUS_UPDATING":    5,
	}
)

func (x DeviceStatus) Enum() *DeviceStatus {
	p := new(DeviceStatus)
	*p = x
	return p
}

func (x DeviceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_monitoring_proto_enumTypes[0].Descriptor()
}

func (DeviceStatus) Type() protoreflect.EnumType {
	return &file_monitoring_proto_enumTypes[0]
}

func (x DeviceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceStatus.Descriptor instead.
func (DeviceStatus) EnumDescriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{0}
}

// Device registration
type RegisterDeviceRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DeviceId        string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceName      string                 `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	DeviceType      string                 `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	Location        string                 `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FirmwareVersion string                 `protobuf:"bytes,6,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RegisterDeviceRequest) Reset() {
	*x = RegisterDeviceRequest{}
	mi := &file_monitoring_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceRequest) ProtoMessage() {}

func (x *RegisterDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceRequest.ProtoReflect.Descriptor instead.
func (*RegisterDeviceRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RegisterDeviceRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *RegisterDeviceRequest) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *RegisterDeviceRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *RegisterDeviceRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegisterDeviceRequest) GetFirmwareVersion() string {
	if x != nil {
		return x.FirmwareVersion
	}
	return ""
}

type RegisterDeviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Device        *Device                `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDeviceResponse) Reset() {
	*x = RegisterDeviceResponse{}
	mi := &file_monitoring_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceResponse) ProtoMessage() {}

func (x *RegisterDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceResponse.ProtoReflect.Descriptor instead.
func (*RegisterDeviceResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterDeviceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterDeviceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// Device retrieval
type GetDeviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceRequest) Reset() {
	*x = GetDeviceRequest{}
	mi := &file_monitoring_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceRequest) ProtoMessage() {}

func (x *GetDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{2}
}

func (x *GetDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type GetDeviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Found         bool                   `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	Device        *Device                `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceResponse) Reset() {
	*x = GetDeviceResponse{}
	mi := &file_monitoring_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceResponse) ProtoMessage() {}

func (x *GetDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{3}
}

func (x *GetDeviceResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *GetDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// Device status update
type UpdateDeviceStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Status        DeviceStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=monitoring.DeviceStatus" json:"status,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeviceStatusRequest) Reset() {
	*x = UpdateDeviceStatusRequest{}
	mi := &file_monitoring_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeviceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceStatusRequest) ProtoMessage() {}

func (x *UpdateDeviceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceStatusRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDeviceStatusRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UpdateDeviceStatusRequest) GetStatus() DeviceStatus {
	if x != nil {
		return x.Status
	}
	return DeviceStatus_DEVICE_STATUS_UNKNOWN
}

func (x *UpdateDeviceStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UpdateDeviceStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Device        *Device                `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeviceStatusResponse) Reset() {
	*x = UpdateDeviceStatusResponse{}
	mi := &file_monitoring_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeviceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceStatusResponse) ProtoMessage() {}

func (x *UpdateDeviceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeviceStatusResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDeviceStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateDeviceStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateDeviceStatusResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// Device metrics
type GetDeviceMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	MetricType    string                 `protobuf:"bytes,2,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"` // "temperature", "humidity", "pressure", "all"
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceMetricsRequest) Reset() {
	*x = GetDeviceMetricsRequest{}
	mi := &file_monitoring_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceMetricsRequest) ProtoMessage() {}

func (x *GetDeviceMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceMetricsRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{6}
}

func (x *GetDeviceMetricsRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetDeviceMetricsRequest) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *GetDeviceMetricsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetDeviceMetricsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetDeviceMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	MetricType    string                 `protobuf:"bytes,2,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	DataPoints    []*MetricDataPoint     `protobuf:"bytes,3,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	TotalPoints   int32                  `protobuf:"varint,4,opt,name=total_points,json=totalPoints,proto3" json:"total_points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceMetricsResponse) Reset() {
	*x = GetDeviceMetricsResponse{}
	mi := &file_monitoring_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceMetricsResponse) ProtoMessage() {}

func (x *GetDeviceMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceMetricsResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{7}
}

func (x *GetDeviceMetricsResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetDeviceMetricsResponse) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *GetDeviceMetricsResponse) GetDataPoints() []*MetricDataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *GetDeviceMetricsResponse) GetTotalPoints() int32 {
	if x != nil {
		return x.TotalPoints
	}
	return 0
}

// Health check
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_monitoring_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{8}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_monitoring_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{9}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HealthCheckResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Server streaming - Device status updates
type StreamDeviceStatusRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	DeviceIds             []string               `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	UpdateIntervalSeconds int32                  `protobuf:"varint,2,opt,name=update_interval_seconds,json=updateIntervalSeconds,proto3" json:"update_interval_seconds,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *StreamDeviceStatusRequest) Reset() {
	*x = StreamDeviceStatusRequest{}
	mi := &file_monitoring_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamDeviceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDeviceStatusRequest) ProtoMessage() {}

func (x *StreamDeviceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDeviceStatusRequest.ProtoReflect.Descriptor instead.
func (*StreamDeviceStatusRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{10}
}

func (x *StreamDeviceStatusRequest) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *StreamDeviceStatusRequest) GetUpdateIntervalSeconds() int32 {
	if x != nil {
		return x.UpdateIntervalSeconds
	}
	return 0
}

type DeviceStatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Status        DeviceStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=monitoring.DeviceStatus" json:"status,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceStatusUpdate) Reset() {
	*x = DeviceStatusUpdate{}
	mi := &file_monitoring_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceStatusUpdate) ProtoMessage() {}

func (x *DeviceStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceStatusUpdate.ProtoReflect.Descriptor instead.
func (*DeviceStatusUpdate) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{11}
}

func (x *DeviceStatusUpdate) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceStatusUpdate) GetStatus() DeviceStatus {
	if x != nil {
		return x.Status
	}
	return DeviceStatus_DEVICE_STATUS_UNKNOWN
}

func (x *DeviceStatusUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DeviceStatusUpdate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeviceStatusUpdate) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Client streaming - Bulk device updates
type BulkUpdateDeviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Operation     string                 `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"` // "update_config", "restart", "firmware_update"
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkUpdateDeviceRequest) Reset() {
	*x = BulkUpdateDeviceRequest{}
	mi := &file_monitoring_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkUpdateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateDeviceRequest) ProtoMessage() {}

func (x *BulkUpdateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateDeviceRequest.ProtoReflect.Descriptor instead.
func (*BulkUpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{12}
}

func (x *BulkUpdateDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *BulkUpdateDeviceRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *BulkUpdateDeviceRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type BulkUpdateDevicesResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TotalProcessed    int32                  `protobuf:"varint,1,opt,name=total_processed,json=totalProcessed,proto3" json:"total_processed,omitempty"`
	Successful        int32                  `protobuf:"varint,2,opt,name=successful,proto3" json:"successful,omitempty"`
	Failed            int32                  `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	Errors            []string               `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	SuccessfulDevices []string               `protobuf:"bytes,5,rep,name=successful_devices,json=successfulDevices,proto3" json:"successful_devices,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BulkUpdateDevicesResponse) Reset() {
	*x = BulkUpdateDevicesResponse{}
	mi := &file_monitoring_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkUpdateDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateDevicesResponse) ProtoMessage() {}

func (x *BulkUpdateDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateDevicesResponse.ProtoReflect.Descriptor instead.
func (*BulkUpdateDevicesResponse) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{13}
}

func (x *BulkUpdateDevicesResponse) GetTotalProcessed() int32 {
	if x != nil {
		return x.TotalProcessed
	}
	return 0
}

func (x *BulkUpdateDevicesResponse) GetSuccessful() int32 {
	if x != nil {
		return x.Successful
	}
	return 0
}

func (x *BulkUpdateDevicesResponse) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *BulkUpdateDevicesResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *BulkUpdateDevicesResponse) GetSuccessfulDevices() []string {
	if x != nil {
		return x.SuccessfulDevices
	}
	return nil
}

// Bidirectional streaming - Device monitoring and control
type DeviceCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CommandType   string                 `protobuf:"bytes,2,opt,name=command_type,json=commandType,proto3" json:"command_type,omitempty"` // "start_monitoring", "stop_monitoring", "get_status", "set_config"
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestId     string                 `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceCommand) Reset() {
	*x = DeviceCommand{}
	mi := &file_monitoring_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCommand) ProtoMessage() {}

func (x *DeviceCommand) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCommand.ProtoReflect.Descriptor instead.
func (*DeviceCommand) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{14}
}

func (x *DeviceCommand) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceCommand) GetCommandType() string {
	if x != nil {
		return x.CommandType
	}
	return ""
}

func (x *DeviceCommand) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *DeviceCommand) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type DeviceTelemetry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Telemetry     *TelemetryData         `protobuf:"bytes,4,opt,name=telemetry,proto3" json:"telemetry,omitempty"`
	Status        DeviceStatus           `protobuf:"varint,5,opt,name=status,proto3,enum=monitoring.DeviceStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceTelemetry) Reset() {
	*x = DeviceTelemetry{}
	mi := &file_monitoring_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceTelemetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTelemetry) ProtoMessage() {}

func (x *DeviceTelemetry) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTelemetry.ProtoReflect.Descriptor instead.
func (*DeviceTelemetry) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{15}
}

func (x *DeviceTelemetry) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceTelemetry) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DeviceTelemetry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DeviceTelemetry) GetTelemetry() *TelemetryData {
	if x != nil {
		return x.Telemetry
	}
	return nil
}

func (x *DeviceTelemetry) GetStatus() DeviceStatus {
	if x != nil {
		return x.Status
	}
	return DeviceStatus_DEVICE_STATUS_UNKNOWN
}

func (x *DeviceTelemetry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Data structures
type Device struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type            string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Location        string                 `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Status          DeviceStatus           `protobuf:"varint,5,opt,name=status,proto3,enum=monitoring.DeviceStatus" json:"status,omitempty"`
	FirmwareVersion string                 `protobuf:"bytes,6,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version,omitempty"`
	LastSeen        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Configuration   map[string]string      `protobuf:"bytes,11,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_monitoring_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{16}
}

func (x *Device) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Device) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Device) GetStatus() DeviceStatus {
	if x != nil {
		return x.Status
	}
	return DeviceStatus_DEVICE_STATUS_UNKNOWN
}

func (x *Device) GetFirmwareVersion() string {
	if x != nil {
		return x.FirmwareVersion
	}
	return ""
}

func (x *Device) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *Device) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Device) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Device) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Device) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type MetricDataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MetricName    string                 `protobuf:"bytes,2,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	Value         float64                `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	Unit          string                 `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`
	Tags          map[string]string      `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricDataPoint) Reset() {
	*x = MetricDataPoint{}
	mi := &file_monitoring_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricDataPoint) ProtoMessage() {}

func (x *MetricDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricDataPoint.ProtoReflect.Descriptor instead.
func (*MetricDataPoint) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{17}
}

func (x *MetricDataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MetricDataPoint) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *MetricDataPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MetricDataPoint) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *MetricDataPoint) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type TelemetryData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Temperature    float64                `protobuf:"fixed64,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humidity       float64                `protobuf:"fixed64,2,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Pressure       float64                `protobuf:"fixed64,3,opt,name=pressure,proto3" json:"pressure,omitempty"`
	Voltage        float64                `protobuf:"fixed64,4,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Current        float64                `protobuf:"fixed64,5,opt,name=current,proto3" json:"current,omitempty"`
	SignalStrength int32                  `protobuf:"varint,6,opt,name=signal_strength,json=signalStrength,proto3" json:"signal_strength,omitempty"`
	BatteryLevel   int32                  `protobuf:"varint,7,opt,name=battery_level,json=batteryLevel,proto3" json:"battery_level,omitempty"`
	CustomMetrics  map[string]float64     `protobuf:"bytes,8,rep,name=custom_metrics,json=customMetrics,proto3" json:"custom_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TelemetryData) Reset() {
	*x = TelemetryData{}
	mi := &file_monitoring_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryData) ProtoMessage() {}

func (x *TelemetryData) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryData.ProtoReflect.Descriptor instead.
func (*TelemetryData) Descriptor() ([]byte, []int) {
	return file_monitoring_proto_rawDescGZIP(), []int{18}
}

func (x *TelemetryData) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *TelemetryData) GetHumidity() float64 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *TelemetryData) GetPressure() float64 {
	if x != nil {
		return x.Pressure
	}
	return 0
}

func (x *TelemetryData) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *TelemetryData) GetCurrent() float64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *TelemetryData) GetSignalStrength() int32 {
	if x != nil {
		return x.SignalStrength
	}
	return 0
}

func (x *TelemetryData) GetBatteryLevel() int32 {
	if x != nil {
		return x.BatteryLevel
	}
	return 0
}

func (x *TelemetryData) GetCustomMetrics() map[string]float64 {
	if x != nil {
		return x.CustomMetrics
	}
	return nil
}

var File_monitoring_proto protoreflect.FileDescriptor

const file_monitoring_proto_rawDesc = "" +
	"\n" +
	"\x10monitoring.proto\x12\n" +
	"monitoring\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc7\x02\n" +
	"\x15RegisterDeviceRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vdevice_name\x18\x02 \x01(\tR\n" +
	"deviceName\x12\x1f\n" +
	"\vdevice_type\x18\x03 \x01(\tR\n" +
	"deviceType\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocation\x12K\n" +
	"\bmetadata\x18\x05 \x03(\v2/.monitoring.RegisterDeviceRequest.MetadataEntryR\bmetadata\x12)\n" +
	"\x10firmware_version\x18\x06 \x01(\tR\x0ffirmwareVersion\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"x\n" +
	"\x16RegisterDeviceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12*\n" +
	"\x06device\x18\x03 \x01(\v2\x12.monitoring.DeviceR\x06device\"/\n" +
	"\x10GetDeviceRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\"U\n" +
	"\x11GetDeviceResponse\x12\x14\n" +
	"\x05found\x18\x01 \x01(\bR\x05found\x12*\n" +
	"\x06device\x18\x02 \x01(\v2\x12.monitoring.DeviceR\x06device\"\x82\x01\n" +
	"\x19UpdateDeviceStatusRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x120\n" +
	"\x06status\x18\x02 \x01(\x0e2\x18.monitoring.DeviceStatusR\x06status\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"|\n" +
	"\x1aUpdateDeviceStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12*\n" +
	"\x06device\x18\x03 \x01(\v2\x12.monitoring.DeviceR\x06device\"\xc9\x01\n" +
	"\x17GetDeviceMetricsRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vmetric_type\x18\x02 \x01(\tR\n" +
	"metricType\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"\xb9\x01\n" +
	"\x18GetDeviceMetricsResponse\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vmetric_type\x18\x02 \x01(\tR\n" +
	"metricType\x12<\n" +
	"\vdata_points\x18\x03 \x03(\v2\x1b.monitoring.MetricDataPointR\n" +
	"dataPoints\x12!\n" +
	"\ftotal_points\x18\x04 \x01(\x05R\vtotalPoints\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x89\x02\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12I\n" +
	"\bmetadata\x18\x04 \x03(\v2-.monitoring.HealthCheckResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"r\n" +
	"\x19StreamDeviceStatusRequest\x12\x1d\n" +
	"\n" +
	"device_ids\x18\x01 \x03(\tR\tdeviceIds\x126\n" +
	"\x17update_interval_seconds\x18\x02 \x01(\x05R\x15updateIntervalSeconds\"\xbe\x02\n" +
	"\x12DeviceStatusUpdate\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x120\n" +
	"\x06status\x18\x02 \x01(\x0e2\x18.monitoring.DeviceStatusR\x06status\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12H\n" +
	"\bmetadata\x18\x05 \x03(\v2,.monitoring.DeviceStatusUpdate.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe8\x01\n" +
	"\x17BulkUpdateDeviceRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1c\n" +
	"\toperation\x18\x02 \x01(\tR\toperation\x12S\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v23.monitoring.BulkUpdateDeviceRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc3\x01\n" +
	"\x19BulkUpdateDevicesResponse\x12'\n" +
	"\x0ftotal_processed\x18\x01 \x01(\x05R\x0etotalProcessed\x12\x1e\n" +
	"\n" +
	"successful\x18\x02 \x01(\x05R\n" +
	"successful\x12\x16\n" +
	"\x06failed\x18\x03 \x01(\x05R\x06failed\x12\x16\n" +
	"\x06errors\x18\x04 \x03(\tR\x06errors\x12-\n" +
	"\x12successful_devices\x18\x05 \x03(\tR\x11successfulDevices\"\xf8\x01\n" +
	"\rDeviceCommand\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12!\n" +
	"\fcommand_type\x18\x02 \x01(\tR\vcommandType\x12I\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2).monitoring.DeviceCommand.ParametersEntryR\n" +
	"parameters\x12\x1d\n" +
	"\n" +
	"request_id\x18\x04 \x01(\tR\trequestId\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8c\x02\n" +
	"\x0fDeviceTelemetry\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x127\n" +
	"\ttelemetry\x18\x04 \x01(\v2\x19.monitoring.TelemetryDataR\ttelemetry\x120\n" +
	"\x06status\x18\x05 \x01(\x0e2\x18.monitoring.DeviceStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\"\xf2\x04\n" +
	"\x06Device\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocation\x120\n" +
	"\x06status\x18\x05 \x01(\x0e2\x18.monitoring.DeviceStatusR\x06status\x12)\n" +
	"\x10firmware_version\x18\x06 \x01(\tR\x0ffirmwareVersion\x127\n" +
	"\tlast_seen\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12<\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2 .monitoring.Device.MetadataEntryR\bmetadata\x12K\n" +
	"\rconfiguration\x18\v \x03(\v2%.monitoring.Device.ConfigurationEntryR\rconfiguration\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a@\n" +
	"\x12ConfigurationEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8a\x02\n" +
	"\x0fMetricDataPoint\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1f\n" +
	"\vmetric_name\x18\x02 \x01(\tR\n" +
	"metricName\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x01R\x05value\x12\x12\n" +
	"\x04unit\x18\x04 \x01(\tR\x04unit\x129\n" +
	"\x04tags\x18\x05 \x03(\v2%.monitoring.MetricDataPoint.TagsEntryR\x04tags\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x82\x03\n" +
	"\rTelemetryData\x12 \n" +
	"\vtemperature\x18\x01 \x01(\x01R\vtemperature\x12\x1a\n" +
	"\bhumidity\x18\x02 \x01(\x01R\bhumidity\x12\x1a\n" +
	"\bpressure\x18\x03 \x01(\x01R\bpressure\x12\x18\n" +
	"\avoltage\x18\x04 \x01(\x01R\avoltage\x12\x18\n" +
	"\acurrent\x18\x05 \x01(\x01R\acurrent\x12'\n" +
	"\x0fsignal_strength\x18\x06 \x01(\x05R\x0esignalStrength\x12#\n" +
	"\rbattery_level\x18\a \x01(\x05R\fbatteryLevel\x12S\n" +
	"\x0ecustom_metrics\x18\b \x03(\v2,.monitoring.TelemetryData.CustomMetricsEntryR\rcustomMetrics\x1a@\n" +
	"\x12CustomMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01*\xb2\x01\n" +
	"\fDeviceStatus\x12\x19\n" +
	"\x15DEVICE_STATUS_UNKNOWN\x10\x00\x12\x18\n" +
	"\x14DEVICE_STATUS_ONLINE\x10\x01\x12\x19\n" +
	"\x15DEVICE_STATUS_OFFLINE\x10\x02\x12\x1d\n" +
	"\x19DEVICE_STATUS_MAINTENANCE\x10\x03\x12\x17\n" +
	"\x13DEVICE_STATUS_ERROR\x10\x04\x12\x1a\n" +
	"\x16DEVICE_STATUS_UPDATING\x10\x052\xdd\x05\n" +
	"\x14IoTMonitoringService\x12W\n" +
	"\x0eRegisterDevice\x12!.monitoring.RegisterDeviceRequest\x1a\".monitoring.RegisterDeviceResponse\x12H\n" +
	"\tGetDevice\x12\x1c.monitoring.GetDeviceRequest\x1a\x1d.monitoring.GetDeviceResponse\x12c\n" +
	"\x12UpdateDeviceStatus\x12%.monitoring.UpdateDeviceStatusRequest\x1a&.monitoring.UpdateDeviceStatusResponse\x12]\n" +
	"\x10GetDeviceMetrics\x12#.monitoring.GetDeviceMetricsRequest\x1a$.monitoring.GetDeviceMetricsResponse\x12N\n" +
	"\vHealthCheck\x12\x1e.monitoring.HealthCheckRequest\x1a\x1f.monitoring.HealthCheckResponse\x12]\n" +
	"\x12StreamDeviceStatus\x12%.monitoring.StreamDeviceStatusRequest\x1a\x1e.monitoring.DeviceStatusUpdate0\x01\x12a\n" +
	"\x11BulkUpdateDevices\x12#.monitoring.BulkUpdateDeviceRequest\x1a%.monitoring.BulkUpdateDevicesResponse(\x01\x12L\n" +
	"\x0eMonitorDevices\x12\x19.monitoring.DeviceCommand\x1a\x1b.monitoring.DeviceTelemetry(\x010\x01BMZKgithub.com/gripmock/grpctestify/examples/iot-monitoring/server/monitoringpbb\x06proto3"

var (
	file_monitoring_proto_rawDescOnce sync.Once
	file_monitoring_proto_rawDescData []byte
)

func file_monitoring_proto_rawDescGZIP() []byte {
	file_monitoring_proto_rawDescOnce.Do(func() {
		file_monitoring_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_monitoring_proto_rawDesc), len(file_monitoring_proto_rawDesc)))
	})
	return file_monitoring_proto_rawDescData
}

var file_monitoring_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_monitoring_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_monitoring_proto_goTypes = []any{
	(DeviceStatus)(0),                  // 0: monitoring.DeviceStatus
	(*RegisterDeviceRequest)(nil),      // 1: monitoring.RegisterDeviceRequest
	(*RegisterDeviceResponse)(nil),     // 2: monitoring.RegisterDeviceResponse
	(*GetDeviceRequest)(nil),           // 3: monitoring.GetDeviceRequest
	(*GetDeviceResponse)(nil),          // 4: monitoring.GetDeviceResponse
	(*UpdateDeviceStatusRequest)(nil),  // 5: monitoring.UpdateDeviceStatusRequest
	(*UpdateDeviceStatusResponse)(nil), // 6: monitoring.UpdateDeviceStatusResponse
	(*GetDeviceMetricsRequest)(nil),    // 7: monitoring.GetDeviceMetricsRequest
	(*GetDeviceMetricsResponse)(nil),   // 8: monitoring.GetDeviceMetricsResponse
	(*HealthCheckRequest)(nil),         // 9: monitoring.HealthCheckRequest
	(*HealthCheckResponse)(nil),        // 10: monitoring.HealthCheckResponse
	(*StreamDeviceStatusRequest)(nil),  // 11: monitoring.StreamDeviceStatusRequest
	(*DeviceStatusUpdate)(nil),         // 12: monitoring.DeviceStatusUpdate
	(*BulkUpdateDeviceRequest)(nil),    // 13: monitoring.BulkUpdateDeviceRequest
	(*BulkUpdateDevicesResponse)(nil),  // 14: monitoring.BulkUpdateDevicesResponse
	(*DeviceCommand)(nil),              // 15: monitoring.DeviceCommand
	(*DeviceTelemetry)(nil),            // 16: monitoring.DeviceTelemetry
	(*Device)(nil),                     // 17: monitoring.Device
	(*MetricDataPoint)(nil),            // 18: monitoring.MetricDataPoint
	(*TelemetryData)(nil),              // 19: monitoring.TelemetryData
	nil,                                // 20: monitoring.RegisterDeviceRequest.MetadataEntry
	nil,                                // 21: monitoring.HealthCheckResponse.MetadataEntry
	nil,                                // 22: monitoring.DeviceStatusUpdate.MetadataEntry
	nil,                                // 23: monitoring.BulkUpdateDeviceRequest.ParametersEntry
	nil,                                // 24: monitoring.DeviceCommand.ParametersEntry
	nil,                                // 25: monitoring.Device.MetadataEntry
	nil,                                // 26: monitoring.Device.ConfigurationEntry
	nil,                                // 27: monitoring.MetricDataPoint.TagsEntry
	nil,                                // 28: monitoring.TelemetryData.CustomMetricsEntry
	(*timestamppb.Timestamp)(nil),      // 29: google.protobuf.Timestamp
}
var file_monitoring_proto_depIdxs = []int32{
	20, // 0: monitoring.RegisterDeviceRequest.metadata:type_name -> monitoring.RegisterDeviceRequest.MetadataEntry
	17, // 1: monitoring.RegisterDeviceResponse.device:type_name -> monitoring.Device
	17, // 2: monitoring.GetDeviceResponse.device:type_name -> monitoring.Device
	0,  // 3: monitoring.UpdateDeviceStatusRequest.status:type_name -> monitoring.DeviceStatus
	17, // 4: monitoring.UpdateDeviceStatusResponse.device:type_name -> monitoring.Device
	29, // 5: monitoring.GetDeviceMetricsRequest.start_time:type_name -> google.protobuf.Timestamp
	29, // 6: monitoring.GetDeviceMetricsRequest.end_time:type_name -> google.protobuf.Timestamp
	18, // 7: monitoring.GetDeviceMetricsResponse.data_points:type_name -> monitoring.MetricDataPoint
	29, // 8: monitoring.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	21, // 9: monitoring.HealthCheckResponse.metadata:type_name -> monitoring.HealthCheckResponse.MetadataEntry
	0,  // 10: monitoring.DeviceStatusUpdate.status:type_name -> monitoring.DeviceStatus
	29, // 11: monitoring.DeviceStatusUpdate.timestamp:type_name -> google.protobuf.Timestamp
	22, // 12: monitoring.DeviceStatusUpdate.metadata:type_name -> monitoring.DeviceStatusUpdate.MetadataEntry
	23, // 13: monitoring.BulkUpdateDeviceRequest.parameters:type_name -> monitoring.BulkUpdateDeviceRequest.ParametersEntry
	24, // 14: monitoring.DeviceCommand.parameters:type_name -> monitoring.DeviceCommand.ParametersEntry
	29, // 15: monitoring.DeviceTelemetry.timestamp:type_name -> google.protobuf.Timestamp
	19, // 16: monitoring.DeviceTelemetry.telemetry:type_name -> monitoring.TelemetryData
	0,  // 17: monitoring.DeviceTelemetry.status:type_name -> monitoring.DeviceStatus
	0,  // 18: monitoring.Device.status:type_name -> monitoring.DeviceStatus
	29, // 19: monitoring.Device.last_seen:type_name -> google.protobuf.Timestamp
	29, // 20: monitoring.Device.created_at:type_name -> google.protobuf.Timestamp
	29, // 21: monitoring.Device.updated_at:type_name -> google.protobuf.Timestamp
	25, // 22: monitoring.Device.metadata:type_name -> monitoring.Device.MetadataEntry
	26, // 23: monitoring.Device.configuration:type_name -> monitoring.Device.ConfigurationEntry
	29, // 24: monitoring.MetricDataPoint.timestamp:type_name -> google.protobuf.Timestamp
	27, // 25: monitoring.MetricDataPoint.tags:type_name -> monitoring.MetricDataPoint.TagsEntry
	28, // 26: monitoring.TelemetryData.custom_metrics:type_name -> monitoring.TelemetryData.CustomMetricsEntry
	1,  // 27: monitoring.IoTMonitoringService.RegisterDevice:input_type -> monitoring.RegisterDeviceRequest
	3,  // 28: monitoring.IoTMonitoringService.GetDevice:input_type -> monitoring.GetDeviceRequest
	5,  // 29: monitoring.IoTMonitoringService.UpdateDeviceStatus:input_type -> monitoring.UpdateDeviceStatusRequest
	7,  // 30: monitoring.IoTMonitoringService.GetDeviceMetrics:input_type -> monitoring.GetDeviceMetricsRequest
	9,  // 31: monitoring.IoTMonitoringService.HealthCheck:input_type -> monitoring.HealthCheckRequest
	11, // 32: monitoring.IoTMonitoringService.StreamDeviceStatus:input_type -> monitoring.StreamDeviceStatusRequest
	13, // 33: monitoring.IoTMonitoringService.BulkUpdateDevices:input_type -> monitoring.BulkUpdateDeviceRequest
	15, // 34: monitoring.IoTMonitoringService.MonitorDevices:input_type -> monitoring.DeviceCommand
	2,  // 35: monitoring.IoTMonitoringService.RegisterDevice:output_type -> monitoring.RegisterDeviceResponse
	4,  // 36: monitoring.IoTMonitoringService.GetDevice:output_type -> monitoring.GetDeviceResponse
	6,  // 37: monitoring.IoTMonitoringService.UpdateDeviceStatus:output_type -> monitoring.UpdateDeviceStatusResponse
	8,  // 38: monitoring.IoTMonitoringService.GetDeviceMetrics:output_type -> monitoring.GetDeviceMetricsResponse
	10, // 39: monitoring.IoTMonitoringService.HealthCheck:output_type -> monitoring.HealthCheckResponse
	12, // 40: monitoring.IoTMonitoringService.StreamDeviceStatus:output_type -> monitoring.DeviceStatusUpdate
	14, // 41: monitoring.IoTMonitoringService.BulkUpdateDevices:output_type -> monitoring.BulkUpdateDevicesResponse
	16, // 42: monitoring.IoTMonitoringService.MonitorDevices:output_type -> monitoring.DeviceTelemetry
	35, // [35:43] is the sub-list for method output_type
	27, // [27:35] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_monitoring_proto_init() }
func file_monitoring_proto_init() {
	if File_monitoring_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_monitoring_proto_rawDesc), len(file_monitoring_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_monitoring_proto_goTypes,
		DependencyIndexes: file_monitoring_proto_depIdxs,
		EnumInfos:         file_monitoring_proto_enumTypes,
		MessageInfos:      file_monitoring_proto_msgTypes,
	}.Build()
	File_monitoring_proto = out.File
	file_monitoring_proto_goTypes = nil
	file_monitoring_proto_depIdxs = nil
}
