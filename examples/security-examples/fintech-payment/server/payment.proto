syntax = "proto3";

package payment;

option go_package = "github.com/gripmock/grpctestify/examples/fintech-payment/server/paymentpb";

import "google/protobuf/timestamp.proto";

// FinTech Payment Service with advanced security and compliance features
service PaymentService {
  // Unary RPCs
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse);
  rpc ProcessPayment(ProcessPaymentRequest) returns (ProcessPaymentResponse);
  rpc ProcessRefund(ProcessRefundRequest) returns (ProcessRefundResponse);
  rpc GetTransactionHistory(GetTransactionHistoryRequest) returns (GetTransactionHistoryResponse);
  rpc ValidateCard(ValidateCardRequest) returns (ValidateCardResponse);
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
  
  // Server Streaming - Real-time transaction monitoring
  rpc StreamTransactions(StreamTransactionsRequest) returns (stream TransactionUpdate);
  
  // Client Streaming - Bulk payment processing
  rpc BulkProcessPayments(stream BulkPaymentRequest) returns (BulkPaymentResponse);
  
  // Bidirectional Streaming - Real-time fraud detection and payment processing
  rpc FraudDetection(stream PaymentRequest) returns (stream FraudAnalysis);
}

// Account management
message CreateAccountRequest {
  string customer_id = 1;
  string account_type = 2; // "checking", "savings", "business"
  string currency = 3;
  map<string, string> metadata = 4;
  string compliance_level = 5; // "basic", "enhanced", "premium"
}

message CreateAccountResponse {
  bool success = 1;
  string message = 2;
  Account account = 3;
  string compliance_status = 4;
}

message GetAccountRequest {
  string account_id = 1;
  string customer_id = 2;
}

message GetAccountResponse {
  bool found = 1;
  Account account = 2;
  AccountStatus status = 3;
}

// Payment processing
message ProcessPaymentRequest {
  string account_id = 1;
  string merchant_id = 2;
  double amount = 3;
  string currency = 4;
  string payment_method = 5; // "card", "bank_transfer", "crypto"
  PaymentCard card_details = 6;
  map<string, string> metadata = 7;
  string risk_level = 8; // "low", "medium", "high"
}

message ProcessPaymentResponse {
  bool success = 1;
  string transaction_id = 2;
  string status = 3; // "pending", "approved", "declined", "fraud_detected"
  string message = 4;
  double amount_charged = 5;
  string currency = 6;
  google.protobuf.Timestamp processed_at = 7;
  RiskAssessment risk_assessment = 8;
  ComplianceCheck compliance_check = 9;
}

message ProcessRefundRequest {
  string transaction_id = 1;
  double refund_amount = 2;
  string reason = 3;
  string customer_id = 4;
}

message ProcessRefundResponse {
  bool success = 1;
  string refund_id = 2;
  string status = 3;
  string message = 4;
  double amount_refunded = 5;
  google.protobuf.Timestamp processed_at = 6;
}

// Transaction history
message GetTransactionHistoryRequest {
  string account_id = 1;
  google.protobuf.Timestamp start_date = 2;
  google.protobuf.Timestamp end_date = 3;
  int32 limit = 4;
  int32 offset = 5;
}

message GetTransactionHistoryResponse {
  repeated Transaction transactions = 1;
  int32 total_count = 2;
  bool has_more = 3;
}

// Card validation
message ValidateCardRequest {
  PaymentCard card = 1;
  string customer_id = 2;
}

message ValidateCardResponse {
  bool valid = 1;
  string card_type = 2;
  string issuer = 3;
  string risk_score = 4;
  repeated string validation_errors = 5;
}

// Health check
message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  string status = 1;
  string version = 2;
  google.protobuf.Timestamp timestamp = 3;
  map<string, string> metadata = 4;
  ComplianceStatus compliance_status = 5;
}

// Server streaming - Transaction monitoring
message StreamTransactionsRequest {
  repeated string account_ids = 1;
  repeated string transaction_types = 2; // "payment", "refund", "transfer"
  double min_amount = 3;
  double max_amount = 4;
}

message TransactionUpdate {
  string transaction_id = 1;
  string account_id = 2;
  string transaction_type = 3;
  double amount = 4;
  string currency = 5;
  string status = 6;
  google.protobuf.Timestamp timestamp = 7;
  RiskAssessment risk_assessment = 8;
  map<string, string> metadata = 9;
}

// Client streaming - Bulk payments
message BulkPaymentRequest {
  string batch_id = 1;
  string account_id = 2;
  string merchant_id = 3;
  double amount = 4;
  string currency = 5;
  PaymentCard card_details = 6;
  map<string, string> metadata = 7;
}

message BulkPaymentResponse {
  string batch_id = 1;
  int32 total_processed = 2;
  int32 successful = 3;
  int32 failed = 4;
  int32 fraud_detected = 5;
  repeated string errors = 6;
  repeated string successful_transactions = 7;
  ComplianceReport compliance_report = 8;
}

// Bidirectional streaming - Fraud detection
message PaymentRequest {
  string request_id = 1;
  string account_id = 2;
  string merchant_id = 3;
  double amount = 4;
  string currency = 5;
  PaymentCard card_details = 6;
  map<string, string> metadata = 7;
  string ip_address = 8;
  string user_agent = 9;
  google.protobuf.Timestamp timestamp = 10;
}

message FraudAnalysis {
  string request_id = 1;
  string analysis_id = 2;
  string risk_level = 3; // "low", "medium", "high", "critical"
  double risk_score = 4;
  repeated string risk_factors = 5;
  string recommendation = 6; // "approve", "decline", "review", "additional_verification"
  FraudIndicators fraud_indicators = 7;
  ComplianceViolations compliance_violations = 8;
  google.protobuf.Timestamp analyzed_at = 9;
}

// Data structures
message Account {
  string id = 1;
  string customer_id = 2;
  string account_type = 3;
  string currency = 4;
  double balance = 5;
  AccountStatus status = 6;
  string compliance_level = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  map<string, string> metadata = 10;
  repeated PaymentCard linked_cards = 11;
}

enum AccountStatus {
  ACCOUNT_STATUS_UNKNOWN = 0;
  ACCOUNT_STATUS_ACTIVE = 1;
  ACCOUNT_STATUS_SUSPENDED = 2;
  ACCOUNT_STATUS_CLOSED = 3;
  ACCOUNT_STATUS_PENDING_VERIFICATION = 4;
  ACCOUNT_STATUS_COMPLIANCE_HOLD = 5;
}

message PaymentCard {
  string card_number = 1;
  string cardholder_name = 2;
  string expiry_month = 3;
  string expiry_year = 4;
  string cvv = 5;
  string card_type = 6; // "visa", "mastercard", "amex", "discover"
  string issuer = 7;
  bool is_primary = 8;
  google.protobuf.Timestamp created_at = 9;
}

message Transaction {
  string id = 1;
  string account_id = 2;
  string merchant_id = 3;
  string transaction_type = 4;
  double amount = 5;
  string currency = 6;
  string status = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp processed_at = 9;
  RiskAssessment risk_assessment = 10;
  ComplianceCheck compliance_check = 11;
  map<string, string> metadata = 12;
}

message RiskAssessment {
  string risk_level = 1;
  double risk_score = 2;
  repeated string risk_factors = 3;
  string assessment_id = 4;
  google.protobuf.Timestamp assessed_at = 5;
}

message ComplianceCheck {
  string compliance_status = 1;
  repeated string violations = 2;
  string check_id = 3;
  google.protobuf.Timestamp checked_at = 4;
}

message FraudIndicators {
  bool suspicious_location = 1;
  bool unusual_amount = 2;
  bool velocity_alert = 3;
  bool card_not_present = 4;
  bool high_risk_merchant = 5;
  bool device_mismatch = 6;
  bool time_anomaly = 7;
  repeated string additional_indicators = 8;
}

message ComplianceViolations {
  bool aml_violation = 1;
  bool kyc_violation = 2;
  bool sanctions_violation = 3;
  bool regulatory_violation = 4;
  repeated string violation_details = 5;
}

message ComplianceStatus {
  string overall_status = 1;
  repeated string active_violations = 2;
  google.protobuf.Timestamp last_audit = 3;
  string audit_score = 4;
}

message ComplianceReport {
  string report_id = 1;
  google.protobuf.Timestamp generated_at = 2;
  int32 total_transactions = 3;
  int32 flagged_transactions = 4;
  repeated string compliance_issues = 5;
  string risk_assessment = 6;
  map<string, int32> violation_counts = 7;
}
