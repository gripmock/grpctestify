// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: payment.proto

package paymentpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountStatus int32

const (
	AccountStatus_ACCOUNT_STATUS_UNKNOWN              AccountStatus = 0
	AccountStatus_ACCOUNT_STATUS_ACTIVE               AccountStatus = 1
	AccountStatus_ACCOUNT_STATUS_SUSPENDED            AccountStatus = 2
	AccountStatus_ACCOUNT_STATUS_CLOSED               AccountStatus = 3
	AccountStatus_ACCOUNT_STATUS_PENDING_VERIFICATION AccountStatus = 4
	AccountStatus_ACCOUNT_STATUS_COMPLIANCE_HOLD      AccountStatus = 5
)

// Enum value maps for AccountStatus.
var (
	AccountStatus_name = map[int32]string{
		0: "ACCOUNT_STATUS_UNKNOWN",
		1: "ACCOUNT_STATUS_ACTIVE",
		2: "ACCOUNT_STATUS_SUSPENDED",
		3: "ACCOUNT_STATUS_CLOSED",
		4: "ACCOUNT_STATUS_PENDING_VERIFICATION",
		5: "ACCOUNT_STATUS_COMPLIANCE_HOLD",
	}
	AccountStatus_value = map[string]int32{
		"ACCOUNT_STATUS_UNKNOWN":              0,
		"ACCOUNT_STATUS_ACTIVE":               1,
		"ACCOUNT_STATUS_SUSPENDED":            2,
		"ACCOUNT_STATUS_CLOSED":               3,
		"ACCOUNT_STATUS_PENDING_VERIFICATION": 4,
		"ACCOUNT_STATUS_COMPLIANCE_HOLD":      5,
	}
)

func (x AccountStatus) Enum() *AccountStatus {
	p := new(AccountStatus)
	*p = x
	return p
}

func (x AccountStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[0].Descriptor()
}

func (AccountStatus) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[0]
}

func (x AccountStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountStatus.Descriptor instead.
func (AccountStatus) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{0}
}

// Account management
type CreateAccountRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CustomerId      string                 `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	AccountType     string                 `protobuf:"bytes,2,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"` // "checking", "savings", "business"
	Currency        string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ComplianceLevel string                 `protobuf:"bytes,5,opt,name=compliance_level,json=complianceLevel,proto3" json:"compliance_level,omitempty"` // "basic", "enhanced", "premium"
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	mi := &file_payment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAccountRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *CreateAccountRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *CreateAccountRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateAccountRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateAccountRequest) GetComplianceLevel() string {
	if x != nil {
		return x.ComplianceLevel
	}
	return ""
}

type CreateAccountResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Success          bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message          string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Account          *Account               `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	ComplianceStatus string                 `protobuf:"bytes,4,opt,name=compliance_status,json=complianceStatus,proto3" json:"compliance_status,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateAccountResponse) Reset() {
	*x = CreateAccountResponse{}
	mi := &file_payment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountResponse) ProtoMessage() {}

func (x *CreateAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateAccountResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *CreateAccountResponse) GetComplianceStatus() string {
	if x != nil {
		return x.ComplianceStatus
	}
	return ""
}

type GetAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CustomerId    string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	mi := &file_payment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{2}
}

func (x *GetAccountRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetAccountRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type GetAccountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Found         bool                   `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	Account       *Account               `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Status        AccountStatus          `protobuf:"varint,3,opt,name=status,proto3,enum=payment.AccountStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountResponse) Reset() {
	*x = GetAccountResponse{}
	mi := &file_payment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountResponse) ProtoMessage() {}

func (x *GetAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountResponse.ProtoReflect.Descriptor instead.
func (*GetAccountResponse) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{3}
}

func (x *GetAccountResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *GetAccountResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *GetAccountResponse) GetStatus() AccountStatus {
	if x != nil {
		return x.Status
	}
	return AccountStatus_ACCOUNT_STATUS_UNKNOWN
}

// Payment processing
type ProcessPaymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	MerchantId    string                 `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	PaymentMethod string                 `protobuf:"bytes,5,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"` // "card", "bank_transfer", "crypto"
	CardDetails   *PaymentCard           `protobuf:"bytes,6,opt,name=card_details,json=cardDetails,proto3" json:"card_details,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RiskLevel     string                 `protobuf:"bytes,8,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"` // "low", "medium", "high"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessPaymentRequest) Reset() {
	*x = ProcessPaymentRequest{}
	mi := &file_payment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentRequest) ProtoMessage() {}

func (x *ProcessPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentRequest.ProtoReflect.Descriptor instead.
func (*ProcessPaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessPaymentRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ProcessPaymentRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *ProcessPaymentRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ProcessPaymentRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ProcessPaymentRequest) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *ProcessPaymentRequest) GetCardDetails() *PaymentCard {
	if x != nil {
		return x.CardDetails
	}
	return nil
}

func (x *ProcessPaymentRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ProcessPaymentRequest) GetRiskLevel() string {
	if x != nil {
		return x.RiskLevel
	}
	return ""
}

type ProcessPaymentResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TransactionId   string                 `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Status          string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"` // "pending", "approved", "declined", "fraud_detected"
	Message         string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	AmountCharged   float64                `protobuf:"fixed64,5,opt,name=amount_charged,json=amountCharged,proto3" json:"amount_charged,omitempty"`
	Currency        string                 `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	ProcessedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	RiskAssessment  *RiskAssessment        `protobuf:"bytes,8,opt,name=risk_assessment,json=riskAssessment,proto3" json:"risk_assessment,omitempty"`
	ComplianceCheck *ComplianceCheck       `protobuf:"bytes,9,opt,name=compliance_check,json=complianceCheck,proto3" json:"compliance_check,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ProcessPaymentResponse) Reset() {
	*x = ProcessPaymentResponse{}
	mi := &file_payment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentResponse) ProtoMessage() {}

func (x *ProcessPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentResponse.ProtoReflect.Descriptor instead.
func (*ProcessPaymentResponse) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessPaymentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProcessPaymentResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ProcessPaymentResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessPaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessPaymentResponse) GetAmountCharged() float64 {
	if x != nil {
		return x.AmountCharged
	}
	return 0
}

func (x *ProcessPaymentResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ProcessPaymentResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

func (x *ProcessPaymentResponse) GetRiskAssessment() *RiskAssessment {
	if x != nil {
		return x.RiskAssessment
	}
	return nil
}

func (x *ProcessPaymentResponse) GetComplianceCheck() *ComplianceCheck {
	if x != nil {
		return x.ComplianceCheck
	}
	return nil
}

type ProcessRefundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	RefundAmount  float64                `protobuf:"fixed64,2,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	CustomerId    string                 `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessRefundRequest) Reset() {
	*x = ProcessRefundRequest{}
	mi := &file_payment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRefundRequest) ProtoMessage() {}

func (x *ProcessRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRefundRequest.ProtoReflect.Descriptor instead.
func (*ProcessRefundRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{6}
}

func (x *ProcessRefundRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ProcessRefundRequest) GetRefundAmount() float64 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *ProcessRefundRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ProcessRefundRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type ProcessRefundResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	RefundId       string                 `protobuf:"bytes,2,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"`
	Status         string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Message        string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	AmountRefunded float64                `protobuf:"fixed64,5,opt,name=amount_refunded,json=amountRefunded,proto3" json:"amount_refunded,omitempty"`
	ProcessedAt    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProcessRefundResponse) Reset() {
	*x = ProcessRefundResponse{}
	mi := &file_payment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRefundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRefundResponse) ProtoMessage() {}

func (x *ProcessRefundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRefundResponse.ProtoReflect.Descriptor instead.
func (*ProcessRefundResponse) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessRefundResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProcessRefundResponse) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *ProcessRefundResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessRefundResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessRefundResponse) GetAmountRefunded() float64 {
	if x != nil {
		return x.AmountRefunded
	}
	return 0
}

func (x *ProcessRefundResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

// Transaction history
type GetTransactionHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionHistoryRequest) Reset() {
	*x = GetTransactionHistoryRequest{}
	mi := &file_payment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionHistoryRequest) ProtoMessage() {}

func (x *GetTransactionHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionHistoryRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{8}
}

func (x *GetTransactionHistoryRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetTransactionHistoryRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetTransactionHistoryRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetTransactionHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTransactionHistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetTransactionHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*Transaction         `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	HasMore       bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionHistoryResponse) Reset() {
	*x = GetTransactionHistoryResponse{}
	mi := &file_payment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionHistoryResponse) ProtoMessage() {}

func (x *GetTransactionHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionHistoryResponse) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{9}
}

func (x *GetTransactionHistoryResponse) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetTransactionHistoryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetTransactionHistoryResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// Card validation
type ValidateCardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Card          *PaymentCard           `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	CustomerId    string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateCardRequest) Reset() {
	*x = ValidateCardRequest{}
	mi := &file_payment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCardRequest) ProtoMessage() {}

func (x *ValidateCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCardRequest.ProtoReflect.Descriptor instead.
func (*ValidateCardRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{10}
}

func (x *ValidateCardRequest) GetCard() *PaymentCard {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *ValidateCardRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type ValidateCardResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Valid            bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	CardType         string                 `protobuf:"bytes,2,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	Issuer           string                 `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	RiskScore        string                 `protobuf:"bytes,4,opt,name=risk_score,json=riskScore,proto3" json:"risk_score,omitempty"`
	ValidationErrors []string               `protobuf:"bytes,5,rep,name=validation_errors,json=validationErrors,proto3" json:"validation_errors,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ValidateCardResponse) Reset() {
	*x = ValidateCardResponse{}
	mi := &file_payment_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCardResponse) ProtoMessage() {}

func (x *ValidateCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCardResponse.ProtoReflect.Descriptor instead.
func (*ValidateCardResponse) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{11}
}

func (x *ValidateCardResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateCardResponse) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *ValidateCardResponse) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *ValidateCardResponse) GetRiskScore() string {
	if x != nil {
		return x.RiskScore
	}
	return ""
}

func (x *ValidateCardResponse) GetValidationErrors() []string {
	if x != nil {
		return x.ValidationErrors
	}
	return nil
}

// Health check
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_payment_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{12}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Status           string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Version          string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata         map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ComplianceStatus *ComplianceStatus      `protobuf:"bytes,5,opt,name=compliance_status,json=complianceStatus,proto3" json:"compliance_status,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_payment_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{13}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HealthCheckResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *HealthCheckResponse) GetComplianceStatus() *ComplianceStatus {
	if x != nil {
		return x.ComplianceStatus
	}
	return nil
}

// Server streaming - Transaction monitoring
type StreamTransactionsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AccountIds       []string               `protobuf:"bytes,1,rep,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"`
	TransactionTypes []string               `protobuf:"bytes,2,rep,name=transaction_types,json=transactionTypes,proto3" json:"transaction_types,omitempty"` // "payment", "refund", "transfer"
	MinAmount        float64                `protobuf:"fixed64,3,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	MaxAmount        float64                `protobuf:"fixed64,4,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StreamTransactionsRequest) Reset() {
	*x = StreamTransactionsRequest{}
	mi := &file_payment_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTransactionsRequest) ProtoMessage() {}

func (x *StreamTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTransactionsRequest.ProtoReflect.Descriptor instead.
func (*StreamTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{14}
}

func (x *StreamTransactionsRequest) GetAccountIds() []string {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

func (x *StreamTransactionsRequest) GetTransactionTypes() []string {
	if x != nil {
		return x.TransactionTypes
	}
	return nil
}

func (x *StreamTransactionsRequest) GetMinAmount() float64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *StreamTransactionsRequest) GetMaxAmount() float64 {
	if x != nil {
		return x.MaxAmount
	}
	return 0
}

type TransactionUpdate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TransactionId   string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	AccountId       string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	TransactionType string                 `protobuf:"bytes,3,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	Amount          float64                `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency        string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Status          string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RiskAssessment  *RiskAssessment        `protobuf:"bytes,8,opt,name=risk_assessment,json=riskAssessment,proto3" json:"risk_assessment,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransactionUpdate) Reset() {
	*x = TransactionUpdate{}
	mi := &file_payment_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionUpdate) ProtoMessage() {}

func (x *TransactionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionUpdate.ProtoReflect.Descriptor instead.
func (*TransactionUpdate) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{15}
}

func (x *TransactionUpdate) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionUpdate) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TransactionUpdate) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *TransactionUpdate) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionUpdate) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransactionUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TransactionUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TransactionUpdate) GetRiskAssessment() *RiskAssessment {
	if x != nil {
		return x.RiskAssessment
	}
	return nil
}

func (x *TransactionUpdate) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Client streaming - Bulk payments
type BulkPaymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchId       string                 `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	MerchantId    string                 `protobuf:"bytes,3,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Amount        float64                `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency      string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	CardDetails   *PaymentCard           `protobuf:"bytes,6,opt,name=card_details,json=cardDetails,proto3" json:"card_details,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkPaymentRequest) Reset() {
	*x = BulkPaymentRequest{}
	mi := &file_payment_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkPaymentRequest) ProtoMessage() {}

func (x *BulkPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkPaymentRequest.ProtoReflect.Descriptor instead.
func (*BulkPaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{16}
}

func (x *BulkPaymentRequest) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *BulkPaymentRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *BulkPaymentRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *BulkPaymentRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BulkPaymentRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BulkPaymentRequest) GetCardDetails() *PaymentCard {
	if x != nil {
		return x.CardDetails
	}
	return nil
}

func (x *BulkPaymentRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type BulkPaymentResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	BatchId                string                 `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	TotalProcessed         int32                  `protobuf:"varint,2,opt,name=total_processed,json=totalProcessed,proto3" json:"total_processed,omitempty"`
	Successful             int32                  `protobuf:"varint,3,opt,name=successful,proto3" json:"successful,omitempty"`
	Failed                 int32                  `protobuf:"varint,4,opt,name=failed,proto3" json:"failed,omitempty"`
	FraudDetected          int32                  `protobuf:"varint,5,opt,name=fraud_detected,json=fraudDetected,proto3" json:"fraud_detected,omitempty"`
	Errors                 []string               `protobuf:"bytes,6,rep,name=errors,proto3" json:"errors,omitempty"`
	SuccessfulTransactions []string               `protobuf:"bytes,7,rep,name=successful_transactions,json=successfulTransactions,proto3" json:"successful_transactions,omitempty"`
	ComplianceReport       *ComplianceReport      `protobuf:"bytes,8,opt,name=compliance_report,json=complianceReport,proto3" json:"compliance_report,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BulkPaymentResponse) Reset() {
	*x = BulkPaymentResponse{}
	mi := &file_payment_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkPaymentResponse) ProtoMessage() {}

func (x *BulkPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkPaymentResponse.ProtoReflect.Descriptor instead.
func (*BulkPaymentResponse) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{17}
}

func (x *BulkPaymentResponse) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *BulkPaymentResponse) GetTotalProcessed() int32 {
	if x != nil {
		return x.TotalProcessed
	}
	return 0
}

func (x *BulkPaymentResponse) GetSuccessful() int32 {
	if x != nil {
		return x.Successful
	}
	return 0
}

func (x *BulkPaymentResponse) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *BulkPaymentResponse) GetFraudDetected() int32 {
	if x != nil {
		return x.FraudDetected
	}
	return 0
}

func (x *BulkPaymentResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *BulkPaymentResponse) GetSuccessfulTransactions() []string {
	if x != nil {
		return x.SuccessfulTransactions
	}
	return nil
}

func (x *BulkPaymentResponse) GetComplianceReport() *ComplianceReport {
	if x != nil {
		return x.ComplianceReport
	}
	return nil
}

// Bidirectional streaming - Fraud detection
type PaymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	MerchantId    string                 `protobuf:"bytes,3,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Amount        float64                `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency      string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	CardDetails   *PaymentCard           `protobuf:"bytes,6,opt,name=card_details,json=cardDetails,proto3" json:"card_details,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IpAddress     string                 `protobuf:"bytes,8,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	UserAgent     string                 `protobuf:"bytes,9,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentRequest) Reset() {
	*x = PaymentRequest{}
	mi := &file_payment_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRequest) ProtoMessage() {}

func (x *PaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRequest.ProtoReflect.Descriptor instead.
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{18}
}

func (x *PaymentRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PaymentRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *PaymentRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *PaymentRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PaymentRequest) GetCardDetails() *PaymentCard {
	if x != nil {
		return x.CardDetails
	}
	return nil
}

func (x *PaymentRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PaymentRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *PaymentRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *PaymentRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type FraudAnalysis struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	RequestId            string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	AnalysisId           string                 `protobuf:"bytes,2,opt,name=analysis_id,json=analysisId,proto3" json:"analysis_id,omitempty"`
	RiskLevel            string                 `protobuf:"bytes,3,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"` // "low", "medium", "high", "critical"
	RiskScore            float64                `protobuf:"fixed64,4,opt,name=risk_score,json=riskScore,proto3" json:"risk_score,omitempty"`
	RiskFactors          []string               `protobuf:"bytes,5,rep,name=risk_factors,json=riskFactors,proto3" json:"risk_factors,omitempty"`
	Recommendation       string                 `protobuf:"bytes,6,opt,name=recommendation,proto3" json:"recommendation,omitempty"` // "approve", "decline", "review", "additional_verification"
	FraudIndicators      *FraudIndicators       `protobuf:"bytes,7,opt,name=fraud_indicators,json=fraudIndicators,proto3" json:"fraud_indicators,omitempty"`
	ComplianceViolations *ComplianceViolations  `protobuf:"bytes,8,opt,name=compliance_violations,json=complianceViolations,proto3" json:"compliance_violations,omitempty"`
	AnalyzedAt           *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=analyzed_at,json=analyzedAt,proto3" json:"analyzed_at,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FraudAnalysis) Reset() {
	*x = FraudAnalysis{}
	mi := &file_payment_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FraudAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FraudAnalysis) ProtoMessage() {}

func (x *FraudAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FraudAnalysis.ProtoReflect.Descriptor instead.
func (*FraudAnalysis) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{19}
}

func (x *FraudAnalysis) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *FraudAnalysis) GetAnalysisId() string {
	if x != nil {
		return x.AnalysisId
	}
	return ""
}

func (x *FraudAnalysis) GetRiskLevel() string {
	if x != nil {
		return x.RiskLevel
	}
	return ""
}

func (x *FraudAnalysis) GetRiskScore() float64 {
	if x != nil {
		return x.RiskScore
	}
	return 0
}

func (x *FraudAnalysis) GetRiskFactors() []string {
	if x != nil {
		return x.RiskFactors
	}
	return nil
}

func (x *FraudAnalysis) GetRecommendation() string {
	if x != nil {
		return x.Recommendation
	}
	return ""
}

func (x *FraudAnalysis) GetFraudIndicators() *FraudIndicators {
	if x != nil {
		return x.FraudIndicators
	}
	return nil
}

func (x *FraudAnalysis) GetComplianceViolations() *ComplianceViolations {
	if x != nil {
		return x.ComplianceViolations
	}
	return nil
}

func (x *FraudAnalysis) GetAnalyzedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AnalyzedAt
	}
	return nil
}

// Data structures
type Account struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerId      string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	AccountType     string                 `protobuf:"bytes,3,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	Currency        string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Balance         float64                `protobuf:"fixed64,5,opt,name=balance,proto3" json:"balance,omitempty"`
	Status          AccountStatus          `protobuf:"varint,6,opt,name=status,proto3,enum=payment.AccountStatus" json:"status,omitempty"`
	ComplianceLevel string                 `protobuf:"bytes,7,opt,name=compliance_level,json=complianceLevel,proto3" json:"compliance_level,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LinkedCards     []*PaymentCard         `protobuf:"bytes,11,rep,name=linked_cards,json=linkedCards,proto3" json:"linked_cards,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_payment_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{20}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Account) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *Account) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Account) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Account) GetStatus() AccountStatus {
	if x != nil {
		return x.Status
	}
	return AccountStatus_ACCOUNT_STATUS_UNKNOWN
}

func (x *Account) GetComplianceLevel() string {
	if x != nil {
		return x.ComplianceLevel
	}
	return ""
}

func (x *Account) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Account) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Account) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Account) GetLinkedCards() []*PaymentCard {
	if x != nil {
		return x.LinkedCards
	}
	return nil
}

type PaymentCard struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CardNumber     string                 `protobuf:"bytes,1,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	CardholderName string                 `protobuf:"bytes,2,opt,name=cardholder_name,json=cardholderName,proto3" json:"cardholder_name,omitempty"`
	ExpiryMonth    string                 `protobuf:"bytes,3,opt,name=expiry_month,json=expiryMonth,proto3" json:"expiry_month,omitempty"`
	ExpiryYear     string                 `protobuf:"bytes,4,opt,name=expiry_year,json=expiryYear,proto3" json:"expiry_year,omitempty"`
	Cvv            string                 `protobuf:"bytes,5,opt,name=cvv,proto3" json:"cvv,omitempty"`
	CardType       string                 `protobuf:"bytes,6,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"` // "visa", "mastercard", "amex", "discover"
	Issuer         string                 `protobuf:"bytes,7,opt,name=issuer,proto3" json:"issuer,omitempty"`
	IsPrimary      bool                   `protobuf:"varint,8,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PaymentCard) Reset() {
	*x = PaymentCard{}
	mi := &file_payment_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCard) ProtoMessage() {}

func (x *PaymentCard) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCard.ProtoReflect.Descriptor instead.
func (*PaymentCard) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{21}
}

func (x *PaymentCard) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *PaymentCard) GetCardholderName() string {
	if x != nil {
		return x.CardholderName
	}
	return ""
}

func (x *PaymentCard) GetExpiryMonth() string {
	if x != nil {
		return x.ExpiryMonth
	}
	return ""
}

func (x *PaymentCard) GetExpiryYear() string {
	if x != nil {
		return x.ExpiryYear
	}
	return ""
}

func (x *PaymentCard) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

func (x *PaymentCard) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *PaymentCard) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *PaymentCard) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *PaymentCard) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Transaction struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId       string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	MerchantId      string                 `protobuf:"bytes,3,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	TransactionType string                 `protobuf:"bytes,4,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	Amount          float64                `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency        string                 `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	Status          string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ProcessedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	RiskAssessment  *RiskAssessment        `protobuf:"bytes,10,opt,name=risk_assessment,json=riskAssessment,proto3" json:"risk_assessment,omitempty"`
	ComplianceCheck *ComplianceCheck       `protobuf:"bytes,11,opt,name=compliance_check,json=complianceCheck,proto3" json:"compliance_check,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_payment_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{22}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Transaction) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *Transaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *Transaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Transaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Transaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transaction) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

func (x *Transaction) GetRiskAssessment() *RiskAssessment {
	if x != nil {
		return x.RiskAssessment
	}
	return nil
}

func (x *Transaction) GetComplianceCheck() *ComplianceCheck {
	if x != nil {
		return x.ComplianceCheck
	}
	return nil
}

func (x *Transaction) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type RiskAssessment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RiskLevel     string                 `protobuf:"bytes,1,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"`
	RiskScore     float64                `protobuf:"fixed64,2,opt,name=risk_score,json=riskScore,proto3" json:"risk_score,omitempty"`
	RiskFactors   []string               `protobuf:"bytes,3,rep,name=risk_factors,json=riskFactors,proto3" json:"risk_factors,omitempty"`
	AssessmentId  string                 `protobuf:"bytes,4,opt,name=assessment_id,json=assessmentId,proto3" json:"assessment_id,omitempty"`
	AssessedAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=assessed_at,json=assessedAt,proto3" json:"assessed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskAssessment) Reset() {
	*x = RiskAssessment{}
	mi := &file_payment_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskAssessment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskAssessment) ProtoMessage() {}

func (x *RiskAssessment) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskAssessment.ProtoReflect.Descriptor instead.
func (*RiskAssessment) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{23}
}

func (x *RiskAssessment) GetRiskLevel() string {
	if x != nil {
		return x.RiskLevel
	}
	return ""
}

func (x *RiskAssessment) GetRiskScore() float64 {
	if x != nil {
		return x.RiskScore
	}
	return 0
}

func (x *RiskAssessment) GetRiskFactors() []string {
	if x != nil {
		return x.RiskFactors
	}
	return nil
}

func (x *RiskAssessment) GetAssessmentId() string {
	if x != nil {
		return x.AssessmentId
	}
	return ""
}

func (x *RiskAssessment) GetAssessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AssessedAt
	}
	return nil
}

type ComplianceCheck struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ComplianceStatus string                 `protobuf:"bytes,1,opt,name=compliance_status,json=complianceStatus,proto3" json:"compliance_status,omitempty"`
	Violations       []string               `protobuf:"bytes,2,rep,name=violations,proto3" json:"violations,omitempty"`
	CheckId          string                 `protobuf:"bytes,3,opt,name=check_id,json=checkId,proto3" json:"check_id,omitempty"`
	CheckedAt        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=checked_at,json=checkedAt,proto3" json:"checked_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ComplianceCheck) Reset() {
	*x = ComplianceCheck{}
	mi := &file_payment_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceCheck) ProtoMessage() {}

func (x *ComplianceCheck) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceCheck.ProtoReflect.Descriptor instead.
func (*ComplianceCheck) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{24}
}

func (x *ComplianceCheck) GetComplianceStatus() string {
	if x != nil {
		return x.ComplianceStatus
	}
	return ""
}

func (x *ComplianceCheck) GetViolations() []string {
	if x != nil {
		return x.Violations
	}
	return nil
}

func (x *ComplianceCheck) GetCheckId() string {
	if x != nil {
		return x.CheckId
	}
	return ""
}

func (x *ComplianceCheck) GetCheckedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckedAt
	}
	return nil
}

type FraudIndicators struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	SuspiciousLocation   bool                   `protobuf:"varint,1,opt,name=suspicious_location,json=suspiciousLocation,proto3" json:"suspicious_location,omitempty"`
	UnusualAmount        bool                   `protobuf:"varint,2,opt,name=unusual_amount,json=unusualAmount,proto3" json:"unusual_amount,omitempty"`
	VelocityAlert        bool                   `protobuf:"varint,3,opt,name=velocity_alert,json=velocityAlert,proto3" json:"velocity_alert,omitempty"`
	CardNotPresent       bool                   `protobuf:"varint,4,opt,name=card_not_present,json=cardNotPresent,proto3" json:"card_not_present,omitempty"`
	HighRiskMerchant     bool                   `protobuf:"varint,5,opt,name=high_risk_merchant,json=highRiskMerchant,proto3" json:"high_risk_merchant,omitempty"`
	DeviceMismatch       bool                   `protobuf:"varint,6,opt,name=device_mismatch,json=deviceMismatch,proto3" json:"device_mismatch,omitempty"`
	TimeAnomaly          bool                   `protobuf:"varint,7,opt,name=time_anomaly,json=timeAnomaly,proto3" json:"time_anomaly,omitempty"`
	AdditionalIndicators []string               `protobuf:"bytes,8,rep,name=additional_indicators,json=additionalIndicators,proto3" json:"additional_indicators,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FraudIndicators) Reset() {
	*x = FraudIndicators{}
	mi := &file_payment_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FraudIndicators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FraudIndicators) ProtoMessage() {}

func (x *FraudIndicators) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FraudIndicators.ProtoReflect.Descriptor instead.
func (*FraudIndicators) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{25}
}

func (x *FraudIndicators) GetSuspiciousLocation() bool {
	if x != nil {
		return x.SuspiciousLocation
	}
	return false
}

func (x *FraudIndicators) GetUnusualAmount() bool {
	if x != nil {
		return x.UnusualAmount
	}
	return false
}

func (x *FraudIndicators) GetVelocityAlert() bool {
	if x != nil {
		return x.VelocityAlert
	}
	return false
}

func (x *FraudIndicators) GetCardNotPresent() bool {
	if x != nil {
		return x.CardNotPresent
	}
	return false
}

func (x *FraudIndicators) GetHighRiskMerchant() bool {
	if x != nil {
		return x.HighRiskMerchant
	}
	return false
}

func (x *FraudIndicators) GetDeviceMismatch() bool {
	if x != nil {
		return x.DeviceMismatch
	}
	return false
}

func (x *FraudIndicators) GetTimeAnomaly() bool {
	if x != nil {
		return x.TimeAnomaly
	}
	return false
}

func (x *FraudIndicators) GetAdditionalIndicators() []string {
	if x != nil {
		return x.AdditionalIndicators
	}
	return nil
}

type ComplianceViolations struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AmlViolation        bool                   `protobuf:"varint,1,opt,name=aml_violation,json=amlViolation,proto3" json:"aml_violation,omitempty"`
	KycViolation        bool                   `protobuf:"varint,2,opt,name=kyc_violation,json=kycViolation,proto3" json:"kyc_violation,omitempty"`
	SanctionsViolation  bool                   `protobuf:"varint,3,opt,name=sanctions_violation,json=sanctionsViolation,proto3" json:"sanctions_violation,omitempty"`
	RegulatoryViolation bool                   `protobuf:"varint,4,opt,name=regulatory_violation,json=regulatoryViolation,proto3" json:"regulatory_violation,omitempty"`
	ViolationDetails    []string               `protobuf:"bytes,5,rep,name=violation_details,json=violationDetails,proto3" json:"violation_details,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ComplianceViolations) Reset() {
	*x = ComplianceViolations{}
	mi := &file_payment_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceViolations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceViolations) ProtoMessage() {}

func (x *ComplianceViolations) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceViolations.ProtoReflect.Descriptor instead.
func (*ComplianceViolations) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{26}
}

func (x *ComplianceViolations) GetAmlViolation() bool {
	if x != nil {
		return x.AmlViolation
	}
	return false
}

func (x *ComplianceViolations) GetKycViolation() bool {
	if x != nil {
		return x.KycViolation
	}
	return false
}

func (x *ComplianceViolations) GetSanctionsViolation() bool {
	if x != nil {
		return x.SanctionsViolation
	}
	return false
}

func (x *ComplianceViolations) GetRegulatoryViolation() bool {
	if x != nil {
		return x.RegulatoryViolation
	}
	return false
}

func (x *ComplianceViolations) GetViolationDetails() []string {
	if x != nil {
		return x.ViolationDetails
	}
	return nil
}

type ComplianceStatus struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OverallStatus    string                 `protobuf:"bytes,1,opt,name=overall_status,json=overallStatus,proto3" json:"overall_status,omitempty"`
	ActiveViolations []string               `protobuf:"bytes,2,rep,name=active_violations,json=activeViolations,proto3" json:"active_violations,omitempty"`
	LastAudit        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_audit,json=lastAudit,proto3" json:"last_audit,omitempty"`
	AuditScore       string                 `protobuf:"bytes,4,opt,name=audit_score,json=auditScore,proto3" json:"audit_score,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ComplianceStatus) Reset() {
	*x = ComplianceStatus{}
	mi := &file_payment_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceStatus) ProtoMessage() {}

func (x *ComplianceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceStatus.ProtoReflect.Descriptor instead.
func (*ComplianceStatus) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{27}
}

func (x *ComplianceStatus) GetOverallStatus() string {
	if x != nil {
		return x.OverallStatus
	}
	return ""
}

func (x *ComplianceStatus) GetActiveViolations() []string {
	if x != nil {
		return x.ActiveViolations
	}
	return nil
}

func (x *ComplianceStatus) GetLastAudit() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAudit
	}
	return nil
}

func (x *ComplianceStatus) GetAuditScore() string {
	if x != nil {
		return x.AuditScore
	}
	return ""
}

type ComplianceReport struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ReportId            string                 `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	GeneratedAt         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"`
	TotalTransactions   int32                  `protobuf:"varint,3,opt,name=total_transactions,json=totalTransactions,proto3" json:"total_transactions,omitempty"`
	FlaggedTransactions int32                  `protobuf:"varint,4,opt,name=flagged_transactions,json=flaggedTransactions,proto3" json:"flagged_transactions,omitempty"`
	ComplianceIssues    []string               `protobuf:"bytes,5,rep,name=compliance_issues,json=complianceIssues,proto3" json:"compliance_issues,omitempty"`
	RiskAssessment      string                 `protobuf:"bytes,6,opt,name=risk_assessment,json=riskAssessment,proto3" json:"risk_assessment,omitempty"`
	ViolationCounts     map[string]int32       `protobuf:"bytes,7,rep,name=violation_counts,json=violationCounts,proto3" json:"violation_counts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ComplianceReport) Reset() {
	*x = ComplianceReport{}
	mi := &file_payment_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceReport) ProtoMessage() {}

func (x *ComplianceReport) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceReport.ProtoReflect.Descriptor instead.
func (*ComplianceReport) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{28}
}

func (x *ComplianceReport) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *ComplianceReport) GetGeneratedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.GeneratedAt
	}
	return nil
}

func (x *ComplianceReport) GetTotalTransactions() int32 {
	if x != nil {
		return x.TotalTransactions
	}
	return 0
}

func (x *ComplianceReport) GetFlaggedTransactions() int32 {
	if x != nil {
		return x.FlaggedTransactions
	}
	return 0
}

func (x *ComplianceReport) GetComplianceIssues() []string {
	if x != nil {
		return x.ComplianceIssues
	}
	return nil
}

func (x *ComplianceReport) GetRiskAssessment() string {
	if x != nil {
		return x.RiskAssessment
	}
	return ""
}

func (x *ComplianceReport) GetViolationCounts() map[string]int32 {
	if x != nil {
		return x.ViolationCounts
	}
	return nil
}

var File_payment_proto protoreflect.FileDescriptor

const file_payment_proto_rawDesc = "" +
	"\n" +
	"\rpayment.proto\x12\apayment\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa7\x02\n" +
	"\x14CreateAccountRequest\x12\x1f\n" +
	"\vcustomer_id\x18\x01 \x01(\tR\n" +
	"customerId\x12!\n" +
	"\faccount_type\x18\x02 \x01(\tR\vaccountType\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12G\n" +
	"\bmetadata\x18\x04 \x03(\v2+.payment.CreateAccountRequest.MetadataEntryR\bmetadata\x12)\n" +
	"\x10compliance_level\x18\x05 \x01(\tR\x0fcomplianceLevel\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa4\x01\n" +
	"\x15CreateAccountResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12*\n" +
	"\aaccount\x18\x03 \x01(\v2\x10.payment.AccountR\aaccount\x12+\n" +
	"\x11compliance_status\x18\x04 \x01(\tR\x10complianceStatus\"S\n" +
	"\x11GetAccountRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\"\x86\x01\n" +
	"\x12GetAccountResponse\x12\x14\n" +
	"\x05found\x18\x01 \x01(\bR\x05found\x12*\n" +
	"\aaccount\x18\x02 \x01(\v2\x10.payment.AccountR\aaccount\x12.\n" +
	"\x06status\x18\x03 \x01(\x0e2\x16.payment.AccountStatusR\x06status\"\x91\x03\n" +
	"\x15ProcessPaymentRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\tR\n" +
	"merchantId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12%\n" +
	"\x0epayment_method\x18\x05 \x01(\tR\rpaymentMethod\x127\n" +
	"\fcard_details\x18\x06 \x01(\v2\x14.payment.PaymentCardR\vcardDetails\x12H\n" +
	"\bmetadata\x18\a \x03(\v2,.payment.ProcessPaymentRequest.MetadataEntryR\bmetadata\x12\x1d\n" +
	"\n" +
	"risk_level\x18\b \x01(\tR\triskLevel\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x94\x03\n" +
	"\x16ProcessPaymentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12%\n" +
	"\x0eamount_charged\x18\x05 \x01(\x01R\ramountCharged\x12\x1a\n" +
	"\bcurrency\x18\x06 \x01(\tR\bcurrency\x12=\n" +
	"\fprocessed_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\x12@\n" +
	"\x0frisk_assessment\x18\b \x01(\v2\x17.payment.RiskAssessmentR\x0eriskAssessment\x12C\n" +
	"\x10compliance_check\x18\t \x01(\v2\x18.payment.ComplianceCheckR\x0fcomplianceCheck\"\x9b\x01\n" +
	"\x14ProcessRefundRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12#\n" +
	"\rrefund_amount\x18\x02 \x01(\x01R\frefundAmount\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12\x1f\n" +
	"\vcustomer_id\x18\x04 \x01(\tR\n" +
	"customerId\"\xe8\x01\n" +
	"\x15ProcessRefundResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\trefund_id\x18\x02 \x01(\tR\brefundId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12'\n" +
	"\x0famount_refunded\x18\x05 \x01(\x01R\x0eamountRefunded\x12=\n" +
	"\fprocessed_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\"\xdd\x01\n" +
	"\x1cGetTransactionHistoryRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x129\n" +
	"\n" +
	"start_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\"\x95\x01\n" +
	"\x1dGetTransactionHistoryResponse\x128\n" +
	"\ftransactions\x18\x01 \x03(\v2\x14.payment.TransactionR\ftransactions\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\"`\n" +
	"\x13ValidateCardRequest\x12(\n" +
	"\x04card\x18\x01 \x01(\v2\x14.payment.PaymentCardR\x04card\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\"\xad\x01\n" +
	"\x14ValidateCardResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x1b\n" +
	"\tcard_type\x18\x02 \x01(\tR\bcardType\x12\x16\n" +
	"\x06issuer\x18\x03 \x01(\tR\x06issuer\x12\x1d\n" +
	"\n" +
	"risk_score\x18\x04 \x01(\tR\triskScore\x12+\n" +
	"\x11validation_errors\x18\x05 \x03(\tR\x10validationErrors\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\xce\x02\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12F\n" +
	"\bmetadata\x18\x04 \x03(\v2*.payment.HealthCheckResponse.MetadataEntryR\bmetadata\x12F\n" +
	"\x11compliance_status\x18\x05 \x01(\v2\x19.payment.ComplianceStatusR\x10complianceStatus\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa7\x01\n" +
	"\x19StreamTransactionsRequest\x12\x1f\n" +
	"\vaccount_ids\x18\x01 \x03(\tR\n" +
	"accountIds\x12+\n" +
	"\x11transaction_types\x18\x02 \x03(\tR\x10transactionTypes\x12\x1d\n" +
	"\n" +
	"min_amount\x18\x03 \x01(\x01R\tminAmount\x12\x1d\n" +
	"\n" +
	"max_amount\x18\x04 \x01(\x01R\tmaxAmount\"\xcf\x03\n" +
	"\x11TransactionUpdate\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12)\n" +
	"\x10transaction_type\x18\x03 \x01(\tR\x0ftransactionType\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12@\n" +
	"\x0frisk_assessment\x18\b \x01(\v2\x17.payment.RiskAssessmentR\x0eriskAssessment\x12D\n" +
	"\bmetadata\x18\t \x03(\v2(.payment.TransactionUpdate.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe0\x02\n" +
	"\x12BulkPaymentRequest\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vmerchant_id\x18\x03 \x01(\tR\n" +
	"merchantId\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x127\n" +
	"\fcard_details\x18\x06 \x01(\v2\x14.payment.PaymentCardR\vcardDetails\x12E\n" +
	"\bmetadata\x18\a \x03(\v2).payment.BulkPaymentRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd1\x02\n" +
	"\x13BulkPaymentResponse\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12'\n" +
	"\x0ftotal_processed\x18\x02 \x01(\x05R\x0etotalProcessed\x12\x1e\n" +
	"\n" +
	"successful\x18\x03 \x01(\x05R\n" +
	"successful\x12\x16\n" +
	"\x06failed\x18\x04 \x01(\x05R\x06failed\x12%\n" +
	"\x0efraud_detected\x18\x05 \x01(\x05R\rfraudDetected\x12\x16\n" +
	"\x06errors\x18\x06 \x03(\tR\x06errors\x127\n" +
	"\x17successful_transactions\x18\a \x03(\tR\x16successfulTransactions\x12F\n" +
	"\x11compliance_report\x18\b \x01(\v2\x19.payment.ComplianceReportR\x10complianceReport\"\xd4\x03\n" +
	"\x0ePaymentRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vmerchant_id\x18\x03 \x01(\tR\n" +
	"merchantId\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x127\n" +
	"\fcard_details\x18\x06 \x01(\v2\x14.payment.PaymentCardR\vcardDetails\x12A\n" +
	"\bmetadata\x18\a \x03(\v2%.payment.PaymentRequest.MetadataEntryR\bmetadata\x12\x1d\n" +
	"\n" +
	"ip_address\x18\b \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\t \x01(\tR\tuserAgent\x128\n" +
	"\ttimestamp\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xae\x03\n" +
	"\rFraudAnalysis\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x1f\n" +
	"\vanalysis_id\x18\x02 \x01(\tR\n" +
	"analysisId\x12\x1d\n" +
	"\n" +
	"risk_level\x18\x03 \x01(\tR\triskLevel\x12\x1d\n" +
	"\n" +
	"risk_score\x18\x04 \x01(\x01R\triskScore\x12!\n" +
	"\frisk_factors\x18\x05 \x03(\tR\vriskFactors\x12&\n" +
	"\x0erecommendation\x18\x06 \x01(\tR\x0erecommendation\x12C\n" +
	"\x10fraud_indicators\x18\a \x01(\v2\x18.payment.FraudIndicatorsR\x0ffraudIndicators\x12R\n" +
	"\x15compliance_violations\x18\b \x01(\v2\x1d.payment.ComplianceViolationsR\x14complianceViolations\x12;\n" +
	"\vanalyzed_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"analyzedAt\"\x96\x04\n" +
	"\aAccount\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12!\n" +
	"\faccount_type\x18\x03 \x01(\tR\vaccountType\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12\x18\n" +
	"\abalance\x18\x05 \x01(\x01R\abalance\x12.\n" +
	"\x06status\x18\x06 \x01(\x0e2\x16.payment.AccountStatusR\x06status\x12)\n" +
	"\x10compliance_level\x18\a \x01(\tR\x0fcomplianceLevel\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12:\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2\x1e.payment.Account.MetadataEntryR\bmetadata\x127\n" +
	"\flinked_cards\x18\v \x03(\v2\x14.payment.PaymentCardR\vlinkedCards\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbc\x02\n" +
	"\vPaymentCard\x12\x1f\n" +
	"\vcard_number\x18\x01 \x01(\tR\n" +
	"cardNumber\x12'\n" +
	"\x0fcardholder_name\x18\x02 \x01(\tR\x0ecardholderName\x12!\n" +
	"\fexpiry_month\x18\x03 \x01(\tR\vexpiryMonth\x12\x1f\n" +
	"\vexpiry_year\x18\x04 \x01(\tR\n" +
	"expiryYear\x12\x10\n" +
	"\x03cvv\x18\x05 \x01(\tR\x03cvv\x12\x1b\n" +
	"\tcard_type\x18\x06 \x01(\tR\bcardType\x12\x16\n" +
	"\x06issuer\x18\a \x01(\tR\x06issuer\x12\x1d\n" +
	"\n" +
	"is_primary\x18\b \x01(\bR\tisPrimary\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xd2\x04\n" +
	"\vTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vmerchant_id\x18\x03 \x01(\tR\n" +
	"merchantId\x12)\n" +
	"\x10transaction_type\x18\x04 \x01(\tR\x0ftransactionType\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x06 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12=\n" +
	"\fprocessed_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\x12@\n" +
	"\x0frisk_assessment\x18\n" +
	" \x01(\v2\x17.payment.RiskAssessmentR\x0eriskAssessment\x12C\n" +
	"\x10compliance_check\x18\v \x01(\v2\x18.payment.ComplianceCheckR\x0fcomplianceCheck\x12>\n" +
	"\bmetadata\x18\f \x03(\v2\".payment.Transaction.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd3\x01\n" +
	"\x0eRiskAssessment\x12\x1d\n" +
	"\n" +
	"risk_level\x18\x01 \x01(\tR\triskLevel\x12\x1d\n" +
	"\n" +
	"risk_score\x18\x02 \x01(\x01R\triskScore\x12!\n" +
	"\frisk_factors\x18\x03 \x03(\tR\vriskFactors\x12#\n" +
	"\rassessment_id\x18\x04 \x01(\tR\fassessmentId\x12;\n" +
	"\vassessed_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"assessedAt\"\xb4\x01\n" +
	"\x0fComplianceCheck\x12+\n" +
	"\x11compliance_status\x18\x01 \x01(\tR\x10complianceStatus\x12\x1e\n" +
	"\n" +
	"violations\x18\x02 \x03(\tR\n" +
	"violations\x12\x19\n" +
	"\bcheck_id\x18\x03 \x01(\tR\acheckId\x129\n" +
	"\n" +
	"checked_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcheckedAt\"\xe9\x02\n" +
	"\x0fFraudIndicators\x12/\n" +
	"\x13suspicious_location\x18\x01 \x01(\bR\x12suspiciousLocation\x12%\n" +
	"\x0eunusual_amount\x18\x02 \x01(\bR\runusualAmount\x12%\n" +
	"\x0evelocity_alert\x18\x03 \x01(\bR\rvelocityAlert\x12(\n" +
	"\x10card_not_present\x18\x04 \x01(\bR\x0ecardNotPresent\x12,\n" +
	"\x12high_risk_merchant\x18\x05 \x01(\bR\x10highRiskMerchant\x12'\n" +
	"\x0fdevice_mismatch\x18\x06 \x01(\bR\x0edeviceMismatch\x12!\n" +
	"\ftime_anomaly\x18\a \x01(\bR\vtimeAnomaly\x123\n" +
	"\x15additional_indicators\x18\b \x03(\tR\x14additionalIndicators\"\xf1\x01\n" +
	"\x14ComplianceViolations\x12#\n" +
	"\raml_violation\x18\x01 \x01(\bR\famlViolation\x12#\n" +
	"\rkyc_violation\x18\x02 \x01(\bR\fkycViolation\x12/\n" +
	"\x13sanctions_violation\x18\x03 \x01(\bR\x12sanctionsViolation\x121\n" +
	"\x14regulatory_violation\x18\x04 \x01(\bR\x13regulatoryViolation\x12+\n" +
	"\x11violation_details\x18\x05 \x03(\tR\x10violationDetails\"\xc2\x01\n" +
	"\x10ComplianceStatus\x12%\n" +
	"\x0eoverall_status\x18\x01 \x01(\tR\roverallStatus\x12+\n" +
	"\x11active_violations\x18\x02 \x03(\tR\x10activeViolations\x129\n" +
	"\n" +
	"last_audit\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tlastAudit\x12\x1f\n" +
	"\vaudit_score\x18\x04 \x01(\tR\n" +
	"auditScore\"\xc5\x03\n" +
	"\x10ComplianceReport\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\tR\breportId\x12=\n" +
	"\fgenerated_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vgeneratedAt\x12-\n" +
	"\x12total_transactions\x18\x03 \x01(\x05R\x11totalTransactions\x121\n" +
	"\x14flagged_transactions\x18\x04 \x01(\x05R\x13flaggedTransactions\x12+\n" +
	"\x11compliance_issues\x18\x05 \x03(\tR\x10complianceIssues\x12'\n" +
	"\x0frisk_assessment\x18\x06 \x01(\tR\x0eriskAssessment\x12Y\n" +
	"\x10violation_counts\x18\a \x03(\v2..payment.ComplianceReport.ViolationCountsEntryR\x0fviolationCounts\x1aB\n" +
	"\x14ViolationCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01*\xcc\x01\n" +
	"\rAccountStatus\x12\x1a\n" +
	"\x16ACCOUNT_STATUS_UNKNOWN\x10\x00\x12\x19\n" +
	"\x15ACCOUNT_STATUS_ACTIVE\x10\x01\x12\x1c\n" +
	"\x18ACCOUNT_STATUS_SUSPENDED\x10\x02\x12\x19\n" +
	"\x15ACCOUNT_STATUS_CLOSED\x10\x03\x12'\n" +
	"#ACCOUNT_STATUS_PENDING_VERIFICATION\x10\x04\x12\"\n" +
	"\x1eACCOUNT_STATUS_COMPLIANCE_HOLD\x10\x052\xbc\x06\n" +
	"\x0ePaymentService\x12N\n" +
	"\rCreateAccount\x12\x1d.payment.CreateAccountRequest\x1a\x1e.payment.CreateAccountResponse\x12E\n" +
	"\n" +
	"GetAccount\x12\x1a.payment.GetAccountRequest\x1a\x1b.payment.GetAccountResponse\x12Q\n" +
	"\x0eProcessPayment\x12\x1e.payment.ProcessPaymentRequest\x1a\x1f.payment.ProcessPaymentResponse\x12N\n" +
	"\rProcessRefund\x12\x1d.payment.ProcessRefundRequest\x1a\x1e.payment.ProcessRefundResponse\x12f\n" +
	"\x15GetTransactionHistory\x12%.payment.GetTransactionHistoryRequest\x1a&.payment.GetTransactionHistoryResponse\x12K\n" +
	"\fValidateCard\x12\x1c.payment.ValidateCardRequest\x1a\x1d.payment.ValidateCardResponse\x12H\n" +
	"\vHealthCheck\x12\x1b.payment.HealthCheckRequest\x1a\x1c.payment.HealthCheckResponse\x12V\n" +
	"\x12StreamTransactions\x12\".payment.StreamTransactionsRequest\x1a\x1a.payment.TransactionUpdate0\x01\x12R\n" +
	"\x13BulkProcessPayments\x12\x1b.payment.BulkPaymentRequest\x1a\x1c.payment.BulkPaymentResponse(\x01\x12E\n" +
	"\x0eFraudDetection\x12\x17.payment.PaymentRequest\x1a\x16.payment.FraudAnalysis(\x010\x01BKZIgithub.com/gripmock/grpctestify/examples/fintech-payment/server/paymentpbb\x06proto3"

var (
	file_payment_proto_rawDescOnce sync.Once
	file_payment_proto_rawDescData []byte
)

func file_payment_proto_rawDescGZIP() []byte {
	file_payment_proto_rawDescOnce.Do(func() {
		file_payment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_payment_proto_rawDesc), len(file_payment_proto_rawDesc)))
	})
	return file_payment_proto_rawDescData
}

var file_payment_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_payment_proto_goTypes = []any{
	(AccountStatus)(0),                    // 0: payment.AccountStatus
	(*CreateAccountRequest)(nil),          // 1: payment.CreateAccountRequest
	(*CreateAccountResponse)(nil),         // 2: payment.CreateAccountResponse
	(*GetAccountRequest)(nil),             // 3: payment.GetAccountRequest
	(*GetAccountResponse)(nil),            // 4: payment.GetAccountResponse
	(*ProcessPaymentRequest)(nil),         // 5: payment.ProcessPaymentRequest
	(*ProcessPaymentResponse)(nil),        // 6: payment.ProcessPaymentResponse
	(*ProcessRefundRequest)(nil),          // 7: payment.ProcessRefundRequest
	(*ProcessRefundResponse)(nil),         // 8: payment.ProcessRefundResponse
	(*GetTransactionHistoryRequest)(nil),  // 9: payment.GetTransactionHistoryRequest
	(*GetTransactionHistoryResponse)(nil), // 10: payment.GetTransactionHistoryResponse
	(*ValidateCardRequest)(nil),           // 11: payment.ValidateCardRequest
	(*ValidateCardResponse)(nil),          // 12: payment.ValidateCardResponse
	(*HealthCheckRequest)(nil),            // 13: payment.HealthCheckRequest
	(*HealthCheckResponse)(nil),           // 14: payment.HealthCheckResponse
	(*StreamTransactionsRequest)(nil),     // 15: payment.StreamTransactionsRequest
	(*TransactionUpdate)(nil),             // 16: payment.TransactionUpdate
	(*BulkPaymentRequest)(nil),            // 17: payment.BulkPaymentRequest
	(*BulkPaymentResponse)(nil),           // 18: payment.BulkPaymentResponse
	(*PaymentRequest)(nil),                // 19: payment.PaymentRequest
	(*FraudAnalysis)(nil),                 // 20: payment.FraudAnalysis
	(*Account)(nil),                       // 21: payment.Account
	(*PaymentCard)(nil),                   // 22: payment.PaymentCard
	(*Transaction)(nil),                   // 23: payment.Transaction
	(*RiskAssessment)(nil),                // 24: payment.RiskAssessment
	(*ComplianceCheck)(nil),               // 25: payment.ComplianceCheck
	(*FraudIndicators)(nil),               // 26: payment.FraudIndicators
	(*ComplianceViolations)(nil),          // 27: payment.ComplianceViolations
	(*ComplianceStatus)(nil),              // 28: payment.ComplianceStatus
	(*ComplianceReport)(nil),              // 29: payment.ComplianceReport
	nil,                                   // 30: payment.CreateAccountRequest.MetadataEntry
	nil,                                   // 31: payment.ProcessPaymentRequest.MetadataEntry
	nil,                                   // 32: payment.HealthCheckResponse.MetadataEntry
	nil,                                   // 33: payment.TransactionUpdate.MetadataEntry
	nil,                                   // 34: payment.BulkPaymentRequest.MetadataEntry
	nil,                                   // 35: payment.PaymentRequest.MetadataEntry
	nil,                                   // 36: payment.Account.MetadataEntry
	nil,                                   // 37: payment.Transaction.MetadataEntry
	nil,                                   // 38: payment.ComplianceReport.ViolationCountsEntry
	(*timestamppb.Timestamp)(nil),         // 39: google.protobuf.Timestamp
}
var file_payment_proto_depIdxs = []int32{
	30, // 0: payment.CreateAccountRequest.metadata:type_name -> payment.CreateAccountRequest.MetadataEntry
	21, // 1: payment.CreateAccountResponse.account:type_name -> payment.Account
	21, // 2: payment.GetAccountResponse.account:type_name -> payment.Account
	0,  // 3: payment.GetAccountResponse.status:type_name -> payment.AccountStatus
	22, // 4: payment.ProcessPaymentRequest.card_details:type_name -> payment.PaymentCard
	31, // 5: payment.ProcessPaymentRequest.metadata:type_name -> payment.ProcessPaymentRequest.MetadataEntry
	39, // 6: payment.ProcessPaymentResponse.processed_at:type_name -> google.protobuf.Timestamp
	24, // 7: payment.ProcessPaymentResponse.risk_assessment:type_name -> payment.RiskAssessment
	25, // 8: payment.ProcessPaymentResponse.compliance_check:type_name -> payment.ComplianceCheck
	39, // 9: payment.ProcessRefundResponse.processed_at:type_name -> google.protobuf.Timestamp
	39, // 10: payment.GetTransactionHistoryRequest.start_date:type_name -> google.protobuf.Timestamp
	39, // 11: payment.GetTransactionHistoryRequest.end_date:type_name -> google.protobuf.Timestamp
	23, // 12: payment.GetTransactionHistoryResponse.transactions:type_name -> payment.Transaction
	22, // 13: payment.ValidateCardRequest.card:type_name -> payment.PaymentCard
	39, // 14: payment.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	32, // 15: payment.HealthCheckResponse.metadata:type_name -> payment.HealthCheckResponse.MetadataEntry
	28, // 16: payment.HealthCheckResponse.compliance_status:type_name -> payment.ComplianceStatus
	39, // 17: payment.TransactionUpdate.timestamp:type_name -> google.protobuf.Timestamp
	24, // 18: payment.TransactionUpdate.risk_assessment:type_name -> payment.RiskAssessment
	33, // 19: payment.TransactionUpdate.metadata:type_name -> payment.TransactionUpdate.MetadataEntry
	22, // 20: payment.BulkPaymentRequest.card_details:type_name -> payment.PaymentCard
	34, // 21: payment.BulkPaymentRequest.metadata:type_name -> payment.BulkPaymentRequest.MetadataEntry
	29, // 22: payment.BulkPaymentResponse.compliance_report:type_name -> payment.ComplianceReport
	22, // 23: payment.PaymentRequest.card_details:type_name -> payment.PaymentCard
	35, // 24: payment.PaymentRequest.metadata:type_name -> payment.PaymentRequest.MetadataEntry
	39, // 25: payment.PaymentRequest.timestamp:type_name -> google.protobuf.Timestamp
	26, // 26: payment.FraudAnalysis.fraud_indicators:type_name -> payment.FraudIndicators
	27, // 27: payment.FraudAnalysis.compliance_violations:type_name -> payment.ComplianceViolations
	39, // 28: payment.FraudAnalysis.analyzed_at:type_name -> google.protobuf.Timestamp
	0,  // 29: payment.Account.status:type_name -> payment.AccountStatus
	39, // 30: payment.Account.created_at:type_name -> google.protobuf.Timestamp
	39, // 31: payment.Account.updated_at:type_name -> google.protobuf.Timestamp
	36, // 32: payment.Account.metadata:type_name -> payment.Account.MetadataEntry
	22, // 33: payment.Account.linked_cards:type_name -> payment.PaymentCard
	39, // 34: payment.PaymentCard.created_at:type_name -> google.protobuf.Timestamp
	39, // 35: payment.Transaction.created_at:type_name -> google.protobuf.Timestamp
	39, // 36: payment.Transaction.processed_at:type_name -> google.protobuf.Timestamp
	24, // 37: payment.Transaction.risk_assessment:type_name -> payment.RiskAssessment
	25, // 38: payment.Transaction.compliance_check:type_name -> payment.ComplianceCheck
	37, // 39: payment.Transaction.metadata:type_name -> payment.Transaction.MetadataEntry
	39, // 40: payment.RiskAssessment.assessed_at:type_name -> google.protobuf.Timestamp
	39, // 41: payment.ComplianceCheck.checked_at:type_name -> google.protobuf.Timestamp
	39, // 42: payment.ComplianceStatus.last_audit:type_name -> google.protobuf.Timestamp
	39, // 43: payment.ComplianceReport.generated_at:type_name -> google.protobuf.Timestamp
	38, // 44: payment.ComplianceReport.violation_counts:type_name -> payment.ComplianceReport.ViolationCountsEntry
	1,  // 45: payment.PaymentService.CreateAccount:input_type -> payment.CreateAccountRequest
	3,  // 46: payment.PaymentService.GetAccount:input_type -> payment.GetAccountRequest
	5,  // 47: payment.PaymentService.ProcessPayment:input_type -> payment.ProcessPaymentRequest
	7,  // 48: payment.PaymentService.ProcessRefund:input_type -> payment.ProcessRefundRequest
	9,  // 49: payment.PaymentService.GetTransactionHistory:input_type -> payment.GetTransactionHistoryRequest
	11, // 50: payment.PaymentService.ValidateCard:input_type -> payment.ValidateCardRequest
	13, // 51: payment.PaymentService.HealthCheck:input_type -> payment.HealthCheckRequest
	15, // 52: payment.PaymentService.StreamTransactions:input_type -> payment.StreamTransactionsRequest
	17, // 53: payment.PaymentService.BulkProcessPayments:input_type -> payment.BulkPaymentRequest
	19, // 54: payment.PaymentService.FraudDetection:input_type -> payment.PaymentRequest
	2,  // 55: payment.PaymentService.CreateAccount:output_type -> payment.CreateAccountResponse
	4,  // 56: payment.PaymentService.GetAccount:output_type -> payment.GetAccountResponse
	6,  // 57: payment.PaymentService.ProcessPayment:output_type -> payment.ProcessPaymentResponse
	8,  // 58: payment.PaymentService.ProcessRefund:output_type -> payment.ProcessRefundResponse
	10, // 59: payment.PaymentService.GetTransactionHistory:output_type -> payment.GetTransactionHistoryResponse
	12, // 60: payment.PaymentService.ValidateCard:output_type -> payment.ValidateCardResponse
	14, // 61: payment.PaymentService.HealthCheck:output_type -> payment.HealthCheckResponse
	16, // 62: payment.PaymentService.StreamTransactions:output_type -> payment.TransactionUpdate
	18, // 63: payment.PaymentService.BulkProcessPayments:output_type -> payment.BulkPaymentResponse
	20, // 64: payment.PaymentService.FraudDetection:output_type -> payment.FraudAnalysis
	55, // [55:65] is the sub-list for method output_type
	45, // [45:55] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_payment_proto_init() }
func file_payment_proto_init() {
	if File_payment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_payment_proto_rawDesc), len(file_payment_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payment_proto_goTypes,
		DependencyIndexes: file_payment_proto_depIdxs,
		EnumInfos:         file_payment_proto_enumTypes,
		MessageInfos:      file_payment_proto_msgTypes,
	}.Build()
	File_payment_proto = out.File
	file_payment_proto_goTypes = nil
	file_payment_proto_depIdxs = nil
}
