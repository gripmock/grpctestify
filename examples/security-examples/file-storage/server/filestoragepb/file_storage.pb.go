// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: file_storage.proto

package server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// File chunk for streaming upload
type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	ChunkIndex    int32                  `protobuf:"varint,3,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	TotalChunks   int32                  `protobuf:"varint,4,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Checksum      string                 `protobuf:"bytes,6,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_file_storage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_file_storage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_file_storage_proto_rawDescGZIP(), []int{0}
}

func (x *FileChunk) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileChunk) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileChunk) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *FileChunk) GetTotalChunks() int32 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *FileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileChunk) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *FileChunk) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Upload response
type UploadResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	FileId           string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Status           string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // CHUNK_RECEIVED, FILE_COMPLETE, ERROR
	Message          string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	BytesReceived    int64                  `protobuf:"varint,4,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	TotalSize        int64                  `protobuf:"varint,5,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	Url              string                 `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	ChecksumVerified bool                   `protobuf:"varint,7,opt,name=checksum_verified,json=checksumVerified,proto3" json:"checksum_verified,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_file_storage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_storage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_file_storage_proto_rawDescGZIP(), []int{1}
}

func (x *UploadResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UploadResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UploadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadResponse) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *UploadResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *UploadResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UploadResponse) GetChecksumVerified() bool {
	if x != nil {
		return x.ChecksumVerified
	}
	return false
}

// Secure file upload request
type SecureFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Checksum      string                 `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Encryption    string                 `protobuf:"bytes,6,opt,name=encryption,proto3" json:"encryption,omitempty"`
	AccessLevel   string                 `protobuf:"bytes,7,opt,name=access_level,json=accessLevel,proto3" json:"access_level,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecureFile) Reset() {
	*x = SecureFile{}
	mi := &file_file_storage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecureFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecureFile) ProtoMessage() {}

func (x *SecureFile) ProtoReflect() protoreflect.Message {
	mi := &file_file_storage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecureFile.ProtoReflect.Descriptor instead.
func (*SecureFile) Descriptor() ([]byte, []int) {
	return file_file_storage_proto_rawDescGZIP(), []int{2}
}

func (x *SecureFile) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SecureFile) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *SecureFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SecureFile) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SecureFile) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *SecureFile) GetEncryption() string {
	if x != nil {
		return x.Encryption
	}
	return ""
}

func (x *SecureFile) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *SecureFile) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Secure upload response
type SecureUploadResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Status             string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // SECURITY_CHECK, ENCRYPTED_STORAGE, UPLOAD_COMPLETE, ERROR
	Message            string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	EncryptionVerified bool                   `protobuf:"varint,3,opt,name=encryption_verified,json=encryptionVerified,proto3" json:"encryption_verified,omitempty"`
	VirusScanStatus    string                 `protobuf:"bytes,4,opt,name=virus_scan_status,json=virusScanStatus,proto3" json:"virus_scan_status,omitempty"`
	StorageLocation    string                 `protobuf:"bytes,5,opt,name=storage_location,json=storageLocation,proto3" json:"storage_location,omitempty"`
	BackupCreated      bool                   `protobuf:"varint,6,opt,name=backup_created,json=backupCreated,proto3" json:"backup_created,omitempty"`
	FileId             string                 `protobuf:"bytes,7,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	AccessUrl          string                 `protobuf:"bytes,8,opt,name=access_url,json=accessUrl,proto3" json:"access_url,omitempty"`
	AuditLogged        bool                   `protobuf:"varint,9,opt,name=audit_logged,json=auditLogged,proto3" json:"audit_logged,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SecureUploadResponse) Reset() {
	*x = SecureUploadResponse{}
	mi := &file_file_storage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecureUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecureUploadResponse) ProtoMessage() {}

func (x *SecureUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_storage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecureUploadResponse.ProtoReflect.Descriptor instead.
func (*SecureUploadResponse) Descriptor() ([]byte, []int) {
	return file_file_storage_proto_rawDescGZIP(), []int{3}
}

func (x *SecureUploadResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SecureUploadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SecureUploadResponse) GetEncryptionVerified() bool {
	if x != nil {
		return x.EncryptionVerified
	}
	return false
}

func (x *SecureUploadResponse) GetVirusScanStatus() string {
	if x != nil {
		return x.VirusScanStatus
	}
	return ""
}

func (x *SecureUploadResponse) GetStorageLocation() string {
	if x != nil {
		return x.StorageLocation
	}
	return ""
}

func (x *SecureUploadResponse) GetBackupCreated() bool {
	if x != nil {
		return x.BackupCreated
	}
	return false
}

func (x *SecureUploadResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *SecureUploadResponse) GetAccessUrl() string {
	if x != nil {
		return x.AccessUrl
	}
	return ""
}

func (x *SecureUploadResponse) GetAuditLogged() bool {
	if x != nil {
		return x.AuditLogged
	}
	return false
}

// Health check response
type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Uptime        string                 `protobuf:"bytes,3,opt,name=uptime,proto3" json:"uptime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_file_storage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_storage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_file_storage_proto_rawDescGZIP(), []int{4}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheckResponse) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

var File_file_storage_proto protoreflect.FileDescriptor

const file_file_storage_proto_rawDesc = "" +
	"\n" +
	"\x12file_storage.proto\x12\vfilestorage\x1a\x1bgoogle/protobuf/empty.proto\"\xb3\x02\n" +
	"\tFileChunk\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x1f\n" +
	"\vchunk_index\x18\x03 \x01(\x05R\n" +
	"chunkIndex\x12!\n" +
	"\ftotal_chunks\x18\x04 \x01(\x05R\vtotalChunks\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x12\x1a\n" +
	"\bchecksum\x18\x06 \x01(\tR\bchecksum\x12@\n" +
	"\bmetadata\x18\a \x03(\v2$.filestorage.FileChunk.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe0\x01\n" +
	"\x0eUploadResponse\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12%\n" +
	"\x0ebytes_received\x18\x04 \x01(\x03R\rbytesReceived\x12\x1d\n" +
	"\n" +
	"total_size\x18\x05 \x01(\x03R\ttotalSize\x12\x10\n" +
	"\x03url\x18\x06 \x01(\tR\x03url\x12+\n" +
	"\x11checksum_verified\x18\a \x01(\bR\x10checksumVerified\"\xd2\x02\n" +
	"\n" +
	"SecureFile\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x1a\n" +
	"\bchecksum\x18\x05 \x01(\tR\bchecksum\x12\x1e\n" +
	"\n" +
	"encryption\x18\x06 \x01(\tR\n" +
	"encryption\x12!\n" +
	"\faccess_level\x18\a \x01(\tR\vaccessLevel\x12A\n" +
	"\bmetadata\x18\b \x03(\v2%.filestorage.SecureFile.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd2\x02\n" +
	"\x14SecureUploadResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12/\n" +
	"\x13encryption_verified\x18\x03 \x01(\bR\x12encryptionVerified\x12*\n" +
	"\x11virus_scan_status\x18\x04 \x01(\tR\x0fvirusScanStatus\x12)\n" +
	"\x10storage_location\x18\x05 \x01(\tR\x0fstorageLocation\x12%\n" +
	"\x0ebackup_created\x18\x06 \x01(\bR\rbackupCreated\x12\x17\n" +
	"\afile_id\x18\a \x01(\tR\x06fileId\x12\x1d\n" +
	"\n" +
	"access_url\x18\b \x01(\tR\taccessUrl\x12!\n" +
	"\faudit_logged\x18\t \x01(\bR\vauditLogged\"_\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x16\n" +
	"\x06uptime\x18\x03 \x01(\tR\x06uptime2\xf7\x01\n" +
	"\x12FileStorageService\x12F\n" +
	"\vUploadFiles\x12\x16.filestorage.FileChunk\x1a\x1b.filestorage.UploadResponse(\x010\x01\x12P\n" +
	"\x10UploadSecureFile\x12\x17.filestorage.SecureFile\x1a!.filestorage.SecureUploadResponse0\x01\x12G\n" +
	"\vHealthCheck\x12\x16.google.protobuf.Empty\x1a .filestorage.HealthCheckResponseB>Z<github.com/gripmock/grpctestify/examples/file-storage/serverb\x06proto3"

var (
	file_file_storage_proto_rawDescOnce sync.Once
	file_file_storage_proto_rawDescData []byte
)

func file_file_storage_proto_rawDescGZIP() []byte {
	file_file_storage_proto_rawDescOnce.Do(func() {
		file_file_storage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_storage_proto_rawDesc), len(file_file_storage_proto_rawDesc)))
	})
	return file_file_storage_proto_rawDescData
}

var file_file_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_file_storage_proto_goTypes = []any{
	(*FileChunk)(nil),            // 0: filestorage.FileChunk
	(*UploadResponse)(nil),       // 1: filestorage.UploadResponse
	(*SecureFile)(nil),           // 2: filestorage.SecureFile
	(*SecureUploadResponse)(nil), // 3: filestorage.SecureUploadResponse
	(*HealthCheckResponse)(nil),  // 4: filestorage.HealthCheckResponse
	nil,                          // 5: filestorage.FileChunk.MetadataEntry
	nil,                          // 6: filestorage.SecureFile.MetadataEntry
	(*emptypb.Empty)(nil),        // 7: google.protobuf.Empty
}
var file_file_storage_proto_depIdxs = []int32{
	5, // 0: filestorage.FileChunk.metadata:type_name -> filestorage.FileChunk.MetadataEntry
	6, // 1: filestorage.SecureFile.metadata:type_name -> filestorage.SecureFile.MetadataEntry
	0, // 2: filestorage.FileStorageService.UploadFiles:input_type -> filestorage.FileChunk
	2, // 3: filestorage.FileStorageService.UploadSecureFile:input_type -> filestorage.SecureFile
	7, // 4: filestorage.FileStorageService.HealthCheck:input_type -> google.protobuf.Empty
	1, // 5: filestorage.FileStorageService.UploadFiles:output_type -> filestorage.UploadResponse
	3, // 6: filestorage.FileStorageService.UploadSecureFile:output_type -> filestorage.SecureUploadResponse
	4, // 7: filestorage.FileStorageService.HealthCheck:output_type -> filestorage.HealthCheckResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_file_storage_proto_init() }
func file_file_storage_proto_init() {
	if File_file_storage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_storage_proto_rawDesc), len(file_file_storage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_storage_proto_goTypes,
		DependencyIndexes: file_file_storage_proto_depIdxs,
		MessageInfos:      file_file_storage_proto_msgTypes,
	}.Build()
	File_file_storage_proto = out.File
	file_file_storage_proto_goTypes = nil
	file_file_storage_proto_depIdxs = nil
}
