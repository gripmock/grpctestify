syntax = "proto3";

package shopflow;

option go_package = "github.com/gripmock/grpctestify/examples/shopflow-ecommerce/server/shopflowpb";

import "google/protobuf/timestamp.proto";

// E-commerce platform service
service ShopFlowService {
  // Unary RPCs
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);
  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);
  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);
  
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
  
  rpc ProcessPayment(ProcessPaymentRequest) returns (ProcessPaymentResponse);
  rpc RefundPayment(RefundPaymentRequest) returns (RefundPaymentResponse);
  
  // Server Streaming RPCs
  rpc StreamProductUpdates(StreamProductUpdatesRequest) returns (stream ProductUpdate);
  rpc StreamOrderStatus(StreamOrderStatusRequest) returns (stream OrderStatusUpdate);
  rpc StreamInventoryAlerts(StreamInventoryAlertsRequest) returns (stream InventoryAlert);
  
  // Client Streaming RPCs
  rpc BulkCreateProducts(stream CreateProductRequest) returns (BulkCreateProductsResponse);
  rpc BulkUpdateInventory(stream UpdateInventoryRequest) returns (BulkUpdateInventoryResponse);
  
  // Bidirectional Streaming RPCs
  rpc RealTimeChat(stream ChatMessage) returns (stream ChatMessage);
  rpc LiveOrderTracking(stream OrderTrackingRequest) returns (stream OrderTrackingUpdate);
  
  // Health and monitoring
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
  rpc GetMetrics(GetMetricsRequest) returns (GetMetricsResponse);
}

// Product management
message Product {
  string id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  string currency = 5;
  int32 stock_quantity = 6;
  repeated string categories = 7;
  map<string, string> attributes = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
  bool active = 11;
  string sku = 12;
  repeated string image_urls = 13;
  double rating = 14;
  int32 review_count = 15;
}

message CreateProductRequest {
  string name = 1;
  string description = 2;
  double price = 3;
  string currency = 4;
  int32 stock_quantity = 5;
  repeated string categories = 6;
  map<string, string> attributes = 7;
  string sku = 8;
  repeated string image_urls = 9;
}

message CreateProductResponse {
  Product product = 1;
  bool success = 2;
  string message = 3;
}

message GetProductRequest {
  string product_id = 1;
}

message GetProductResponse {
  Product product = 1;
  bool found = 2;
}

message UpdateProductRequest {
  string product_id = 1;
  Product product = 2;
}

message UpdateProductResponse {
  Product product = 1;
  bool success = 2;
  string message = 3;
}

message DeleteProductRequest {
  string product_id = 1;
}

message DeleteProductResponse {
  bool success = 1;
  string message = 2;
}

// Order management
message Order {
  string id = 1;
  string customer_id = 2;
  repeated OrderItem items = 3;
  double total_amount = 4;
  string currency = 5;
  OrderStatus status = 6;
  string shipping_address = 7;
  string billing_address = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
  string payment_method = 11;
  string tracking_number = 12;
  double shipping_cost = 13;
  double tax_amount = 14;
}

message OrderItem {
  string product_id = 1;
  string product_name = 2;
  int32 quantity = 3;
  double unit_price = 4;
  double total_price = 5;
}

enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  ORDER_STATUS_PENDING = 1;
  ORDER_STATUS_CONFIRMED = 2;
  ORDER_STATUS_PROCESSING = 3;
  ORDER_STATUS_SHIPPED = 4;
  ORDER_STATUS_DELIVERED = 5;
  ORDER_STATUS_CANCELLED = 6;
  ORDER_STATUS_REFUNDED = 7;
}

message CreateOrderRequest {
  string customer_id = 1;
  repeated OrderItem items = 2;
  string shipping_address = 3;
  string billing_address = 4;
  string payment_method = 5;
}

message CreateOrderResponse {
  Order order = 1;
  bool success = 2;
  string message = 3;
}

message GetOrderRequest {
  string order_id = 1;
}

message GetOrderResponse {
  Order order = 1;
  bool found = 2;
}

message UpdateOrderStatusRequest {
  string order_id = 1;
  OrderStatus status = 2;
  string tracking_number = 3;
}

message UpdateOrderStatusResponse {
  Order order = 1;
  bool success = 2;
  string message = 3;
}

// Payment processing
message ProcessPaymentRequest {
  string order_id = 1;
  double amount = 2;
  string currency = 3;
  string payment_method = 4;
  string card_token = 5;
  string customer_id = 6;
}

message ProcessPaymentResponse {
  string transaction_id = 1;
  bool success = 2;
  string message = 3;
  double amount_charged = 4;
  string currency = 5;
  google.protobuf.Timestamp processed_at = 6;
}

message RefundPaymentRequest {
  string transaction_id = 1;
  double amount = 2;
  string reason = 3;
}

message RefundPaymentResponse {
  string refund_id = 1;
  bool success = 2;
  string message = 3;
  double amount_refunded = 4;
  google.protobuf.Timestamp processed_at = 5;
}

// Streaming messages
message StreamProductUpdatesRequest {
  repeated string product_ids = 1;
  repeated string categories = 2;
}

message ProductUpdate {
  string product_id = 1;
  string update_type = 2; // "price_change", "stock_update", "status_change"
  Product product = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message StreamOrderStatusRequest {
  string order_id = 1;
}

message OrderStatusUpdate {
  string order_id = 1;
  OrderStatus status = 2;
  string message = 3;
  google.protobuf.Timestamp updated_at = 4;
  string tracking_number = 5;
}

message StreamInventoryAlertsRequest {
  int32 low_stock_threshold = 1;
}

message InventoryAlert {
  string product_id = 1;
  string product_name = 2;
  int32 current_stock = 3;
  int32 threshold = 4;
  string alert_type = 5; // "low_stock", "out_of_stock", "overstock"
  google.protobuf.Timestamp alert_time = 6;
}

// Bulk operations
message BulkCreateProductsResponse {
  int32 total_processed = 1;
  int32 successful = 2;
  int32 failed = 3;
  repeated string product_ids = 4;
  repeated string errors = 5;
}

message UpdateInventoryRequest {
  string product_id = 1;
  int32 quantity_change = 2;
  string reason = 3;
}

message BulkUpdateInventoryResponse {
  int32 total_processed = 1;
  int32 successful = 2;
  int32 failed = 3;
  repeated string errors = 4;
}

// Real-time features
message ChatMessage {
  string id = 1;
  string customer_id = 2;
  string agent_id = 3;
  string message = 4;
  string message_type = 5; // "text", "image", "file"
  google.protobuf.Timestamp timestamp = 6;
  bool is_customer = 7;
}

message OrderTrackingRequest {
  string order_id = 1;
  string customer_id = 2;
}

message OrderTrackingUpdate {
  string order_id = 1;
  OrderStatus status = 2;
  string location = 3;
  string message = 4;
  google.protobuf.Timestamp timestamp = 5;
  double latitude = 6;
  double longitude = 7;
}

// Health and metrics
message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  string status = 1;
  string message = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message GetMetricsRequest {
  string metric_type = 1; // "orders", "revenue", "products", "customers"
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
}

message GetMetricsResponse {
  string metric_type = 1;
  double value = 2;
  string unit = 3;
  google.protobuf.Timestamp timestamp = 4;
  map<string, string> metadata = 5;
}
